{"version":3,"sources":["utils/globals.js","mapbox/mapbox.js","utils/style-utils.js","utils/math-utils.js","utils/assert.js","utils/transition/transition-interpolator.js","utils/transition/transition-utils.js","utils/transition/viewport-fly-to-interpolator.js","utils/transition/linear-interpolator.js","utils/map-state.js","utils/map-constraints.js","components/map-context.js","components/static-map.js","utils/mapboxgl.js","utils/transition-manager.js","utils/map-controller.js","utils/debounce.js","utils/deprecate-warn.js","components/interactive-map.js","components/source.js","utils/deep-equal.js","components/layer.js","components/base-control.js","components/draggable-control.js","components/marker.js","utils/dynamic-position.js","components/popup.js","utils/geolocate-utils.js","components/fullscreen-control.js","components/geolocate-control.js","components/navigation-control.js","utils/version.js","components/scale-control.js","overlays/canvas-overlay.js","overlays/html-overlay.js","overlays/svg-overlay.js","index.js"],"names":["window_","window","global","document_","document","propTypes","container","PropTypes","object","gl","mapboxApiAccessToken","string","mapboxApiUrl","attributionControl","bool","preserveDrawingBuffer","reuseMaps","transformRequest","func","mapOptions","mapStyle","oneOfType","visible","asyncRender","onLoad","onError","width","number","height","viewState","longitude","latitude","zoom","bearing","pitch","altitude","defaultProps","body","accessToken","location","match","search","process","MapboxAccessToken","REACT_APP_MAPBOX_ACCESS_TOKEN","getAccessToken","event","console","error","checkPropTypes","props","component","debug","Mapbox","_map","_fireLoadEvent","type","target","mapboxgl","Error","this","initialized","_checkStyleSheet","version","_initialize","_destroy","_update","resize","map","style","_frame","cancel","_render","savedMap","oldContainer","getContainer","newContainer","classList","add","childNodes","length","appendChild","_container","setStyle","diff","isStyleLoaded","once","_reuse","getContext","HTMLCanvasElement","prototype","center","maxZoom","interactive","trackResize","Map","Object","assign","on","remove","off","baseApiUrl","_create","defineProperty","get","canvas","getCanvas","outline","_updateMapViewport","_updateMapSize","oldProps","newProps","viewportChanged","sizeChanged","redraw","oldViewState","_getViewState","newViewState","jumpTo","_viewStateToMapboxProps","transform","mapboxVersion","testElement","createElement","className","display","append","isCssLoaded","getComputedStyle","position","link","setAttribute","head","refProps","normalizeStyle","toJS","layerIndex","layers","layer","id","layerRef","ref","normalizedLayer","propName","isArray","value","Array","ArrayBuffer","isView","equals","a","b","i","Math","abs","clamp","min","max","lerp","t","ai","assert","condition","message","TransitionInterpolator","propNames","currentProps","nextProps","key","startProps","endProps","start","end","transitionDuration","WRAPPED_ANGULAR_PROPS","isValid","prop","Number","isFinite","getEndValueByShortestPath","startValue","endValue","isWrappedAngularProp","VIEWPORT_TRANSITION_PROPS","REQUIRED_PROPS","LINEARLY_INTERPOLATED_PROPS","DEFAULT_OPTS","speed","curve","ViewportFlyToInterpolator","startViewportProps","endViewportProps","viewport","flyToViewport","getFlyToDuration","LinearInterpolator","opts","transitionProps","around","aroundLngLat","WebMercatorViewport","unproject","project","getMapCenterByLngLatPosition","lngLat","pos","MAPBOX_LIMITS","minZoom","minPitch","maxPitch","DEFAULT_STATE","MapState","transitionEasing","transitionInterpolator","transitionInterruption","startPanLngLat","startZoomLngLat","startBearing","startPitch","startZoom","_viewportProps","_applyConstraints","_interactiveState","_getUpdatedMapState","_unproject","startPos","_calculateNewLngLat","deltaScaleX","deltaScaleY","_calculateNewPitchAndBearing","scale","_calculateNewZoom","normalizeViewportProps","log2","decapitalize","s","toLowerCase","slice","createContext","mapContainer","onViewportChange","onViewStateChange","eventManager","isDragging","NO_TOKEN_WARNING","CONTAINER_STYLE","overflow","preventStyleDiffing","disableTokenWarning","onResize","visibilityConstraints","StaticMap","state","accessTokenInvalid","_mapbox","_mapboxMapRef","createRef","_mapContainerRef","_queryParams","_width","_height","getMap","queryRenderedFeatures","geometry","options","_mapboxMapError","evt","status","setState","supported","current","prevProps","_updateMapStyle","_updateMapProps","finalize","setProps","left","top","href","dimensions","Consumer","interactiveContext","context","Provider","children","mapContainerStyle","constraints","constraintName","checkVisibilityConstraints","visibility","disableWidth","disableHeight","_renderOverlays","bind","_renderNoTokenWarning","PureComponent","noop","TRANSITION_EVENTS","BREAK","SNAP_TO_END","IGNORE","UPDATE","DEFAULT_PROPS","onTransitionStart","onTransitionInterrupt","onTransitionEnd","onStateChange","TransitionManager","getTime","_animationFrame","_onTransitionFrame","requestAnimationFrame","_updateViewport","time","Date","now","propsInTransition","_shouldIgnoreViewportChange","_isTransitionEnabled","_isTransitionInProgress","interruption","currentTime","x0","startTime","duration","easing","y0","cropEasingFunction","_triggerTransition","_endTransition","Boolean","interpolator","arePropsEqual","_isUpdateDueToCurrentTransition","cancelAnimationFrame","getDuration","initialProps","initializeProps","interactionState","inTransition","isZooming","isPanning","isRotating","animation","shouldEnd","interpolateProps","mapState","getViewportProps","NO_TRANSITION_PROPS","LINEAR_TRANSITION_PROPS","EVENT_TYPES","MapController","events","scrollZoom","dragPan","dragRotate","doubleClickZoom","touchZoom","touchRotate","keyboard","_state","_events","_transitionManager","newState","handleEvent","_onWheelEnd","delay","_this","_arguments","timeout","executeNow","apply","arguments","clearTimeout","setTimeout","debounce","getMapState","_onPanStart","_onPan","_onPanEnd","_onPinchStart","_onPinch","_onPinchEnd","_onDoubleTap","_onWheel","_onKeyDown","offsetCenter","x","y","srcEvent","metaKey","altKey","ctrlKey","shiftKey","newMapState","extraProps","extraState","oldViewport","mapStateProps","newViewport","viewStateChanged","keys","some","getInteractiveState","overrides","isInteractive","dimensionChanged","updateViewport","processViewportChange","toggleEvents","eventNames","enabled","forEach","eventName","getCenter","panStart","rotateStart","isFunctionKeyPressed","rightButton","_onPanRotate","_onPanMove","panEnd","rotateEnd","pan","deltaX","deltaY","centerY","startY","rotate","preventDefault","delta","exp","zoomStart","startPinchRotation","rotation","zoomEnd","isZoomOut","funcKey","keyCode","DEPRECATED_PROPS","old","new","getDeprecatedText","name","getNewText","checkDeprecatedProps","depProp","hasOwnProperty","warnMessage","warn","onClick","onNativeClick","onHover","onContextMenu","touchAction","clickRadius","getCursor","isHovering","InteractiveMap","isLoaded","_eventCanvasRef","_staticMapRef","_onInteractionStateChange","_updateInteractiveContext","onInteractionStateChange","_onResize","_setControllerProps","_onViewportChange","_onLoad","_onEvent","callbackName","_normalizeEvent","_onPointerDown","pointerType","_onPointerUp","_onPointerMove","features","interactiveLayerIds","_getFeatures","point","radius","isEntering","isExiting","_onClick","onDblClick","callbacks","isDoubleClickEnabled","push","filter","cb","deprecateWarn","_controller","controller","_eventManager","EventManager","setElement","pointerdown","pointermove","pointerup","pointerleave","click","anyclick","dblclick","wheel","contextmenu","destroy","setOptions","_interactiveContext","queryParams","size","bbox","updatedContext","eventCanvasStyle","cursor","sourceCounter","Source","_sourceOptions","_updateSource","sourceOptions","changedKey","changedKeyCount","source","getSource","setData","data","updateImage","url","coordinates","removeSource","addSource","setCoordinates","_createSource","_loaded","React","Children","child","cloneElement","deepEqual","aKeys","bKeys","layerCounter","Layer","_layerOptions","_updateLayer","layerOptions","getLayer","layout","paint","minzoom","maxzoom","beforeId","otherProps","moveLayer","setLayoutProperty","setPaintProperty","setFilter","setLayerZoomRange","setLayerProperty","diffLayerStyles","_createLayer","removeLayer","addLayer","BaseControl","_context","_containerRef","_onScroll","captureScroll","stopPropagation","_onDragStart","captureDrag","_onDblClick","captureDoubleClick","captureClick","panstart","draggable","onDrag","onDragEnd","onDragStart","offsetLeft","offsetTop","DraggableControl","dragPos","dragOffset","_dragEvents","_getDragEventPosition","_getDragEventOffset","_setupDragEvents","callbackEvent","_getDragLngLat","_onDrag","_onDragEnd","_removeDragEvents","_onDragCancel","panmove","panend","pancancel","rect","getBoundingClientRect","_getDraggedPosition","isRequired","Marker","_control","_getPosition","div","containerStyle","ANCHOR_POSITION","bottom","right","ANCHOR_TYPES","tipSize","closeButton","closeOnClick","anchor","oneOf","dynamicPosition","sortByDepth","onClose","Popup","_closeOnClick","_contentRef","e","forceUpdate","content","selfWidth","selfHeight","padding","anchorX","anchorY","xStep","floor","find","positionType","anchorPosition","getDynamicPosition","clientWidth","clientHeight","z","undefined","zIndex","borderWidth","_getContainerStyle","_renderTip","_renderContent","FullscreenControl","isFullscreen","showButton","_mapboxFullscreenControl","_onFullscreenChange","nextState","_fullscreen","_onClickFullscreen","_checkFullscreenSupport","addEventListener","_fullscreenchange","removeEventListener","label","callback","title","aria-hidden","_renderButton","positionOptions","fitBoundsOptions","trackUserLocation","showUserLocation","onGeolocate","GeolocateControl","supportsGeolocation","markerPosition","_mapboxGeolocateControl","_geolocateButtonRef","_setupMapboxGeolocateControl","controlOptions","_watchState","_geolocateButton","_updateMarker","_updateCamera","_setup","_onClickGeolocate","trigger","coords","_getBounds","LngLat","accuracy","bounds","toBounds","_ne","lng","lat","_sw","fitBounds","_renderMarker","Promise","resolve","navigator","permissions","query","then","p","geolocation","result","geolocationWatchID","_geolocationWatchID","clearWatch","showCompass","showZoom","zoomInLabel","zoomOutLabel","compassLabel","getUIVersion","version1","version2","v1","split","v2","part1","part2","compareVersions","NavigationControl","_onZoomIn","_onZoomOut","_onResetNorth","_uiVersion","_renderCompass","maxWidth","unit","ScaleControl","_mapboxScaleControl","mapboxScaleControl","_onMove","CanvasOverlay","_redraw","ctx","_ctx","pixelRatio","devicePixelRatio","save","restore","_canvas","HTMLOverlay","SVGOverlay"],"mappings":"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","file":"static/js/main.44f61f3e.chunk.js","sourcesContent":["/* global window, global, document */\r\n\r\nconst window_ = typeof window !== 'undefined' ? window : global;\r\nconst global_ = typeof global !== 'undefined' ? global : window;\r\nconst document_ = typeof document !== 'undefined' ? document : {};\r\n\r\nexport {window_ as window, global_ as global, document_ as document};\r\n","// @flow\r\n// Copyright (c) 2015 Uber Technologies, Inc.\r\n\r\n// Permission is hereby granted, free of charge, to any person obtaining a copy\r\n// of this software and associated documentation files (the \"Software\"), to deal\r\n// in the Software without restriction, including without limitation the rights\r\n// to use, copy, modify, merge, publish, distribute, sublicense, and/or sell\r\n// copies of the Software, and to permit persons to whom the Software is\r\n// furnished to do so, subject to the following conditions:\r\n\r\n// The above copyright notice and this permission notice shall be included in\r\n// all copies or substantial portions of the Software.\r\n\r\n// THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\r\n// IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\r\n// FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE\r\n// AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER\r\n// LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,\r\n// OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN\r\n// THE SOFTWARE.\r\n\r\n/* global window, process, HTMLCanvasElement */\r\nimport PropTypes from 'prop-types';\r\nimport {document} from '../utils/globals';\r\n\r\nfunction noop() {}\r\n\r\nfunction defaultOnError(event?: {error: any}) {\r\n  if (event) {\r\n    console.error(event.error); // eslint-disable-line\r\n  }\r\n}\r\n\r\nconst propTypes = {\r\n  // Creation parameters\r\n  container: PropTypes.object /** The container to have the map. */,\r\n  gl: PropTypes.object /** External WebGLContext to use */,\r\n\r\n  mapboxApiAccessToken: PropTypes.string /** Mapbox API access token for Mapbox tiles/styles. */,\r\n  mapboxApiUrl: PropTypes.string,\r\n  attributionControl: PropTypes.bool /** Show attribution control or not. */,\r\n  preserveDrawingBuffer: PropTypes.bool /** Useful when you want to export the canvas as a PNG. */,\r\n  reuseMaps: PropTypes.bool,\r\n  transformRequest: PropTypes.func /** The transformRequest callback for the map */,\r\n  mapOptions: PropTypes.object /** Extra options to pass to Mapbox constructor. See #545. **/,\r\n  mapStyle: PropTypes.oneOfType([\r\n    PropTypes.string,\r\n    PropTypes.object\r\n  ]) /** The Mapbox style. A string url to a MapboxGL style */,\r\n\r\n  visible: PropTypes.bool /** Whether the map is visible */,\r\n  asyncRender: PropTypes.bool /** Whether mapbox should manage its own render cycle */,\r\n\r\n  onLoad: PropTypes.func /** The onLoad callback for the map */,\r\n  onError: PropTypes.func /** The onError callback for the map */,\r\n\r\n  // Map view state\r\n  width: PropTypes.number /** The width of the map. */,\r\n  height: PropTypes.number /** The height of the map. */,\r\n\r\n  viewState: PropTypes.object /** object containing lng/lat/zoom/bearing/pitch */,\r\n\r\n  longitude: PropTypes.number /** The longitude of the center of the map. */,\r\n  latitude: PropTypes.number /** The latitude of the center of the map. */,\r\n  zoom: PropTypes.number /** The tile zoom level of the map. */,\r\n  bearing: PropTypes.number /** Specify the bearing of the viewport */,\r\n  pitch: PropTypes.number /** Specify the pitch of the viewport */,\r\n  // Note: Non-public API, see https://github.com/mapbox/mapbox-gl-js/issues/1137\r\n  altitude: PropTypes.number /** Altitude of the viewport camera. Default 1.5 \"screen heights\" */\r\n};\r\n\r\nconst defaultProps = {\r\n  container: document.body,\r\n  mapboxApiAccessToken: getAccessToken(),\r\n  mapboxApiUrl: 'https://api.mapbox.com',\r\n  preserveDrawingBuffer: false,\r\n  attributionControl: true,\r\n  reuseMaps: false,\r\n  mapOptions: {},\r\n  mapStyle: 'mapbox://styles/mapbox/light-v8',\r\n\r\n  visible: true,\r\n  asyncRender: false,\r\n\r\n  onLoad: noop,\r\n  onError: defaultOnError,\r\n\r\n  width: 0,\r\n  height: 0,\r\n  longitude: 0,\r\n  latitude: 0,\r\n  zoom: 0,\r\n  bearing: 0,\r\n  pitch: 0,\r\n  altitude: 1.5\r\n};\r\n\r\ntype MapboxGL = {\r\n  version: string,\r\n  accessToken: string,\r\n  baseApiUrl: string,\r\n  Map: Function\r\n};\r\n\r\nexport type ViewState = {\r\n  longitude: number,\r\n  latitude: number,\r\n  zoom: number,\r\n  bearing: number,\r\n  pitch: number,\r\n  altitude?: number\r\n};\r\n\r\ntype Props = {\r\n  mapboxgl?: MapboxGL,\r\n  container: any,\r\n  gl?: any,\r\n  mapboxApiAccessToken: string,\r\n  mapboxApiUrl: string,\r\n  attributionControl: boolean,\r\n  preserveDrawingBuffer: boolean,\r\n  onLoad: Function,\r\n  onError: Function,\r\n  reuseMaps: boolean,\r\n  transformRequest?: Function,\r\n  mapStyle: any,\r\n  visible: boolean,\r\n  asyncRender: boolean,\r\n  width: number,\r\n  height: number,\r\n  viewState?: ViewState,\r\n  longitude: number,\r\n  latitude: number,\r\n  zoom: number,\r\n  bearing: number,\r\n  pitch: number,\r\n  altitude?: number,\r\n  mapOptions: any\r\n};\r\n\r\n// Try to get access token from URL, env, local storage or config\r\nexport function getAccessToken(): string {\r\n  let accessToken = null;\r\n\r\n  if (typeof window !== 'undefined' && window.location) {\r\n    const match = window.location.search.match(/access_token=([^&\\/]*)/);\r\n    accessToken = match && match[1];\r\n  }\r\n\r\n  if (!accessToken && typeof process !== 'undefined') {\r\n    // Note: This depends on bundler plugins (e.g. webpack) importing environment correctly\r\n    accessToken =\r\n      accessToken || process.env.MapboxAccessToken || process.env.REACT_APP_MAPBOX_ACCESS_TOKEN; // eslint-disable-line\r\n  }\r\n\r\n  // Prevents mapbox from throwing\r\n  return accessToken || 'no-token';\r\n}\r\n\r\n// Helper function to merge defaultProps and check prop types\r\nfunction checkPropTypes(props, component = 'component') {\r\n  // TODO - check for production (unless done by prop types package?)\r\n  if (props.debug) {\r\n    PropTypes.checkPropTypes(propTypes, props, 'prop', component);\r\n  }\r\n}\r\n\r\n// A small wrapper class for mapbox-gl\r\n// - Provides a prop style interface (that can be trivially used by a React wrapper)\r\n// - Makes sure mapbox doesn't crash under Node\r\n// - Handles map reuse (to work around Mapbox resource leak issues)\r\n// - Provides support for specifying tokens during development\r\n\r\nexport default class Mapbox {\r\n  static initialized: boolean = false;\r\n  static propTypes: any = propTypes;\r\n  static defaultProps: any = defaultProps;\r\n  static savedMap: any = null;\r\n\r\n  constructor(props: Props) {\r\n    if (!props.mapboxgl) {\r\n      throw new Error('Mapbox not available');\r\n    }\r\n\r\n    this.mapboxgl = props.mapboxgl;\r\n\r\n    if (!Mapbox.initialized) {\r\n      Mapbox.initialized = true;\r\n\r\n      // Version detection using babel plugin\r\n      // $FlowFixMe\r\n      // const VERSION = typeof __VERSION__ !== 'undefined' ? __VERSION__ : 'untranspiled source';\r\n      // TODO - expose version for debug\r\n\r\n      this._checkStyleSheet(this.mapboxgl.version);\r\n    }\r\n\r\n    this._initialize(props);\r\n  }\r\n\r\n  mapboxgl: MapboxGL;\r\n  props: Props = defaultProps;\r\n  _map: any = null;\r\n  width: number = 0;\r\n  height: number = 0;\r\n\r\n  finalize() {\r\n    this._destroy();\r\n    return this;\r\n  }\r\n\r\n  setProps(props: Props) {\r\n    this._update(this.props, props);\r\n    return this;\r\n  }\r\n\r\n  // Mapbox's map.resize() reads size from DOM, so DOM element must already be resized\r\n  // In a system like React we must wait to read size until after render\r\n  // (e.g. until \"componentDidUpdate\")\r\n  resize() {\r\n    this._map.resize();\r\n    return this;\r\n  }\r\n\r\n  // Force redraw the map now. Typically resize() and jumpTo() is reflected in the next\r\n  // render cycle, which is managed by Mapbox's animation loop.\r\n  // This removes the synchronization issue caused by requestAnimationFrame.\r\n  redraw() {\r\n    const map = this._map;\r\n    // map._render will throw error if style does not exist\r\n    // https://github.com/mapbox/mapbox-gl-js/blob/fb9fc316da14e99ff4368f3e4faa3888fb43c513\r\n    //   /src/ui/map.js#L1834\r\n    if (map.style) {\r\n      // cancel the scheduled update\r\n      if (map._frame) {\r\n        map._frame.cancel();\r\n        map._frame = null;\r\n      }\r\n      // the order is important - render() may schedule another update\r\n      map._render();\r\n    }\r\n  }\r\n\r\n  // External apps can access map this way\r\n  getMap() {\r\n    return this._map;\r\n  }\r\n\r\n  // PRIVATE API\r\n  _fireLoadEvent = () => {\r\n    this.props.onLoad({\r\n      type: 'load',\r\n      target: this._map\r\n    });\r\n  };\r\n\r\n  _reuse(props: Props) {\r\n    this._map = Mapbox.savedMap;\r\n    // When reusing the saved map, we need to reparent the map(canvas) and other child nodes\r\n    // intoto the new container from the props.\r\n    // Step1: reparenting child nodes from old container to new container\r\n    const oldContainer = this._map.getContainer();\r\n    const newContainer = props.container;\r\n    newContainer.classList.add('mapboxgl-map');\r\n    while (oldContainer.childNodes.length > 0) {\r\n      newContainer.appendChild(oldContainer.childNodes[0]);\r\n    }\r\n    // Step2: replace the internal container with new container from the react component\r\n    this._map._container = newContainer;\r\n    Mapbox.savedMap = null;\r\n\r\n    // Step3: update style and call onload again\r\n    if (props.mapStyle) {\r\n      this._map.setStyle(props.mapStyle, {\r\n        // From the user's perspective, there's no \"diffing\" on initialization\r\n        // We always rebuild the style from scratch when creating a new Mapbox instance\r\n        diff: false\r\n      });\r\n    }\r\n\r\n    // call onload event handler after style fully loaded when style needs update\r\n    if (this._map.isStyleLoaded()) {\r\n      this._fireLoadEvent();\r\n    } else {\r\n      this._map.once('styledata', this._fireLoadEvent);\r\n    }\r\n  }\r\n\r\n  _create(props: Props) {\r\n    // Reuse a saved map, if available\r\n    if (props.reuseMaps && Mapbox.savedMap) {\r\n      this._reuse(props);\r\n    } else {\r\n      if (props.gl) {\r\n        const getContext = HTMLCanvasElement.prototype.getContext;\r\n        // Hijack canvas.getContext to return our own WebGLContext\r\n        // This will be called inside the mapboxgl.Map constructor\r\n        // $FlowFixMe\r\n        HTMLCanvasElement.prototype.getContext = () => {\r\n          // Unhijack immediately\r\n          // $FlowFixMe\r\n          HTMLCanvasElement.prototype.getContext = getContext;\r\n          return props.gl;\r\n        };\r\n      }\r\n\r\n      const mapOptions: any = {\r\n        container: props.container,\r\n        center: [0, 0],\r\n        zoom: 8,\r\n        pitch: 0,\r\n        bearing: 0,\r\n        maxZoom: 24,\r\n        style: props.mapStyle,\r\n        interactive: false,\r\n        trackResize: false,\r\n        attributionControl: props.attributionControl,\r\n        preserveDrawingBuffer: props.preserveDrawingBuffer\r\n      };\r\n      // We don't want to pass a null or no-op transformRequest function.\r\n      if (props.transformRequest) {\r\n        mapOptions.transformRequest = props.transformRequest;\r\n      }\r\n      this._map = new this.mapboxgl.Map(Object.assign({}, mapOptions, props.mapOptions));\r\n\r\n      // Attach optional onLoad function\r\n      this._map.once('load', props.onLoad);\r\n      this._map.on('error', props.onError);\r\n    }\r\n\r\n    return this;\r\n  }\r\n\r\n  _destroy() {\r\n    if (!this._map) {\r\n      return;\r\n    }\r\n\r\n    if (!Mapbox.savedMap) {\r\n      Mapbox.savedMap = this._map;\r\n\r\n      // deregister the mapbox event listeners\r\n      this._map.off('load', this.props.onLoad);\r\n      this._map.off('error', this.props.onError);\r\n      this._map.off('styledata', this._fireLoadEvent);\r\n    } else {\r\n      this._map.remove();\r\n    }\r\n\r\n    this._map = null;\r\n  }\r\n\r\n  _initialize(props: Props) {\r\n    props = Object.assign({}, defaultProps, props);\r\n    checkPropTypes(props, 'Mapbox');\r\n\r\n    // Creation only props\r\n    this.mapboxgl.accessToken = props.mapboxApiAccessToken || defaultProps.mapboxApiAccessToken;\r\n    this.mapboxgl.baseApiUrl = props.mapboxApiUrl;\r\n\r\n    this._create(props);\r\n\r\n    // Hijack dimension properties\r\n    // This eliminates the timing issue between calling resize() and DOM update\r\n    /* eslint-disable accessor-pairs */\r\n    const {container} = props;\r\n    // $FlowFixMe\r\n    Object.defineProperty(container, 'offsetWidth', {get: () => this.width});\r\n    // $FlowFixMe\r\n    Object.defineProperty(container, 'clientWidth', {get: () => this.width});\r\n    // $FlowFixMe\r\n    Object.defineProperty(container, 'offsetHeight', {\r\n      get: () => this.height\r\n    });\r\n    // $FlowFixMe\r\n    Object.defineProperty(container, 'clientHeight', {\r\n      get: () => this.height\r\n    });\r\n\r\n    // Disable outline style\r\n    const canvas = this._map.getCanvas();\r\n    if (canvas) {\r\n      canvas.style.outline = 'none';\r\n    }\r\n\r\n    this._updateMapViewport({}, props);\r\n    this._updateMapSize({}, props);\r\n\r\n    this.props = props;\r\n  }\r\n\r\n  _update(oldProps: Props, newProps: Props) {\r\n    if (!this._map) {\r\n      return;\r\n    }\r\n\r\n    newProps = Object.assign({}, this.props, newProps);\r\n    checkPropTypes(newProps, 'Mapbox');\r\n\r\n    const viewportChanged = this._updateMapViewport(oldProps, newProps);\r\n    const sizeChanged = this._updateMapSize(oldProps, newProps);\r\n\r\n    if (!newProps.asyncRender && (viewportChanged || sizeChanged)) {\r\n      this.redraw();\r\n    }\r\n\r\n    this.props = newProps;\r\n  }\r\n\r\n  // Note: needs to be called after render (e.g. in componentDidUpdate)\r\n  _updateMapSize(oldProps: any, newProps: Props) {\r\n    const sizeChanged = oldProps.width !== newProps.width || oldProps.height !== newProps.height;\r\n    if (sizeChanged) {\r\n      this.width = newProps.width;\r\n      this.height = newProps.height;\r\n      this.resize();\r\n    }\r\n    return sizeChanged;\r\n  }\r\n\r\n  _updateMapViewport(oldProps: any, newProps: Props) {\r\n    const oldViewState = this._getViewState(oldProps);\r\n    const newViewState = this._getViewState(newProps);\r\n\r\n    const viewportChanged =\r\n      newViewState.latitude !== oldViewState.latitude ||\r\n      newViewState.longitude !== oldViewState.longitude ||\r\n      newViewState.zoom !== oldViewState.zoom ||\r\n      newViewState.pitch !== oldViewState.pitch ||\r\n      newViewState.bearing !== oldViewState.bearing ||\r\n      newViewState.altitude !== oldViewState.altitude;\r\n\r\n    if (viewportChanged) {\r\n      this._map.jumpTo(this._viewStateToMapboxProps(newViewState));\r\n\r\n      // TODO - jumpTo doesn't handle altitude\r\n      if (newViewState.altitude !== oldViewState.altitude) {\r\n        this._map.transform.altitude = newViewState.altitude;\r\n      }\r\n    }\r\n    return viewportChanged;\r\n  }\r\n\r\n  _getViewState(props: Props): ViewState {\r\n    const {longitude, latitude, zoom, pitch = 0, bearing = 0, altitude = 1.5} =\r\n      props.viewState || props;\r\n    return {longitude, latitude, zoom, pitch, bearing, altitude};\r\n  }\r\n\r\n  _checkStyleSheet(mapboxVersion: string = '0.47.0') {\r\n    if (typeof document === 'undefined') {\r\n      return;\r\n    }\r\n\r\n    // check mapbox styles\r\n    try {\r\n      const testElement = document.createElement('div');\r\n      testElement.className = 'mapboxgl-map';\r\n      testElement.style.display = 'none';\r\n      document.body.append(testElement);\r\n      const isCssLoaded = window.getComputedStyle(testElement).position !== 'static';\r\n\r\n      if (!isCssLoaded) {\r\n        // attempt to insert mapbox stylesheet\r\n        const link = document.createElement('link');\r\n        link.setAttribute('rel', 'stylesheet');\r\n        link.setAttribute('type', 'text/css');\r\n        link.setAttribute(\r\n          'href',\r\n          `https://api.tiles.mapbox.com/mapbox-gl-js/v${mapboxVersion}/mapbox-gl.css`\r\n        );\r\n        document.head.append(link);\r\n      }\r\n    } catch (error) {\r\n      // do nothing\r\n    }\r\n  }\r\n\r\n  _viewStateToMapboxProps(viewState: ViewState) {\r\n    return {\r\n      center: [viewState.longitude, viewState.latitude],\r\n      zoom: viewState.zoom,\r\n      bearing: viewState.bearing,\r\n      pitch: viewState.pitch\r\n    };\r\n  }\r\n}\r\n","// @flow\r\ntype MapboxStyle =\r\n  | string\r\n  | {\r\n      toJS?: Function,\r\n      layers: Array<any>\r\n    };\r\n\r\nconst refProps = ['type', 'source', 'source-layer', 'minzoom', 'maxzoom', 'filter', 'layout'];\r\n\r\n// Prepare a map style object for diffing\r\n// If immutable - convert to plain object\r\n// Work around some issues in the styles that would fail Mapbox's diffing\r\nexport function normalizeStyle(style: ?MapboxStyle): ?MapboxStyle {\r\n  if (!style) {\r\n    return null;\r\n  }\r\n  if (typeof style === 'string') {\r\n    return style;\r\n  }\r\n  if (style.toJS) {\r\n    style = style.toJS();\r\n  }\r\n  const layerIndex = {};\r\n\r\n  for (const layer of style.layers) {\r\n    layerIndex[layer.id] = layer;\r\n  }\r\n\r\n  const layers = style.layers.map(layer => {\r\n    const layerRef = layerIndex[layer.ref];\r\n    let normalizedLayer = null;\r\n\r\n    if ('interactive' in layer) {\r\n      normalizedLayer = {...layer};\r\n      // Breaks style diffing :(\r\n      delete normalizedLayer.interactive;\r\n    }\r\n\r\n    // Style diffing doesn't work with refs so expand them out manually before diffing.\r\n    if (layerRef) {\r\n      normalizedLayer = normalizedLayer || {...layer};\r\n      delete normalizedLayer.ref;\r\n      // https://github.com/mapbox/mapbox-gl-js/blob/master/src/style-spec/deref.js\r\n      for (const propName of refProps) {\r\n        if (propName in layerRef) {\r\n          normalizedLayer[propName] = layerRef[propName];\r\n        }\r\n      }\r\n    }\r\n\r\n    return normalizedLayer || layer;\r\n  });\r\n\r\n  // Do not mutate the style object provided by the user\r\n  return {...style, layers};\r\n}\r\n","// @flow\r\nconst EPSILON = 1e-7;\r\n\r\n// Returns true if value is either an array or a typed array\r\nfunction isArray(value: any): boolean {\r\n  return Array.isArray(value) || ArrayBuffer.isView(value);\r\n}\r\n\r\n// TODO: use math.gl\r\nexport function equals(a: any, b: any): boolean {\r\n  if (a === b) {\r\n    return true;\r\n  }\r\n  if (isArray(a) && isArray(b)) {\r\n    if (a.length !== b.length) {\r\n      return false;\r\n    }\r\n    for (let i = 0; i < a.length; ++i) {\r\n      if (!equals(a[i], b[i])) {\r\n        return false;\r\n      }\r\n    }\r\n    return true;\r\n  }\r\n  return Math.abs(a - b) <= EPSILON;\r\n}\r\n\r\nexport function clamp(value: number, min: number, max: number): number {\r\n  return Math.max(min, Math.min(max, value));\r\n}\r\n\r\n// Interpolate between two numbers or two arrays\r\nexport function lerp(a: any, b: any, t: number): any {\r\n  if (isArray(a)) {\r\n    return a.map((ai, i) => lerp(ai, b[i], t));\r\n  }\r\n  return t * b + (1 - t) * a;\r\n}\r\n","// @flow\r\n// Replacement for the external assert method to reduce bundle size\r\n// Note: We don't use the second \"message\" argument in calling code,\r\n// so no need to support it here\r\nexport default function assert(condition: any, message?: string) {\r\n  if (!condition) {\r\n    throw new Error(message || 'react-map-gl: assertion failed.');\r\n  }\r\n}\r\n","// @flow\r\nimport {equals} from '../math-utils';\r\nimport assert from '../assert';\r\nimport type {MapStateProps} from '../map-state';\r\n\r\nexport default class TransitionInterpolator {\r\n  propNames: Array<string> = [];\r\n\r\n  /**\r\n   * Checks if two sets of props need transition in between\r\n   * @param currentProps {object} - a list of viewport props\r\n   * @param nextProps {object} - a list of viewport props\r\n   * @returns {bool} - true if two props are equivalent\r\n   */\r\n  arePropsEqual(currentProps: any, nextProps: any): boolean {\r\n    for (const key of this.propNames || []) {\r\n      if (!equals(currentProps[key], nextProps[key])) {\r\n        return false;\r\n      }\r\n    }\r\n    return true;\r\n  }\r\n\r\n  /**\r\n   * Called before transition starts to validate/pre-process start and end props\r\n   * @param startProps {object} - a list of starting viewport props\r\n   * @param endProps {object} - a list of target viewport props\r\n   * @returns {Object} {start, end} - start and end props to be passed\r\n   *   to `interpolateProps`\r\n   */\r\n  initializeProps(\r\n    startProps: any,\r\n    endProps: any\r\n  ): {\r\n    start: any,\r\n    end: any\r\n  } {\r\n    return {start: startProps, end: endProps};\r\n  }\r\n\r\n  /**\r\n   * Returns viewport props in transition\r\n   * @param startProps {object} - a list of starting viewport props\r\n   * @param endProps {object} - a list of target viewport props\r\n   * @param t {number} - a time factor between [0, 1]\r\n   * @returns {object} - a list of interpolated viewport props\r\n   */\r\n  interpolateProps(startProps: any, endProps: any, t: number): any {\r\n    assert(false, 'interpolateProps is not implemented');\r\n  }\r\n\r\n  /**\r\n   * Returns transition duration\r\n   * @param startProps {object} - a list of starting viewport props\r\n   * @param endProps {object} - a list of target viewport props\r\n   * @returns {Number} - transition duration in milliseconds\r\n   */\r\n  getDuration(startProps: MapStateProps, endProps: MapStateProps) {\r\n    return endProps.transitionDuration;\r\n  }\r\n}\r\n","// @flow\r\n\r\nconst WRAPPED_ANGULAR_PROPS = {\r\n  longitude: 1,\r\n  bearing: 1\r\n};\r\n\r\nexport function mod(value: number, divisor: number): number {\r\n  const modulus = value % divisor;\r\n  return modulus < 0 ? divisor + modulus : modulus;\r\n}\r\n\r\nexport function isValid(prop: any): boolean {\r\n  return Number.isFinite(prop) || Array.isArray(prop);\r\n}\r\n\r\nfunction isWrappedAngularProp(propName: string): boolean {\r\n  return propName in WRAPPED_ANGULAR_PROPS;\r\n}\r\n\r\nexport function getEndValueByShortestPath(\r\n  propName: string,\r\n  startValue: number,\r\n  endValue: number\r\n): number {\r\n  if (isWrappedAngularProp(propName) && Math.abs(endValue - startValue) > 180) {\r\n    endValue = endValue < 0 ? endValue + 360 : endValue - 360;\r\n  }\r\n  return endValue;\r\n}\r\n","// @flow\r\nimport assert from '../assert';\r\nimport TransitionInterpolator from './transition-interpolator';\r\n\r\nimport {flyToViewport, getFlyToDuration} from 'viewport-mercator-project';\r\nimport {isValid, getEndValueByShortestPath} from './transition-utils';\r\nimport {lerp} from '../math-utils';\r\n\r\nimport type {MapStateProps} from '../map-state';\r\n\r\nconst VIEWPORT_TRANSITION_PROPS = ['longitude', 'latitude', 'zoom', 'bearing', 'pitch'];\r\nconst REQUIRED_PROPS = ['latitude', 'longitude', 'zoom', 'width', 'height'];\r\nconst LINEARLY_INTERPOLATED_PROPS = ['bearing', 'pitch'];\r\nconst DEFAULT_OPTS = {\r\n  speed: 1.2,\r\n  curve: 1.414\r\n  // screenSpeed and maxDuration are used only if specified\r\n};\r\n\r\ntype FlyToInterpolatorProps = {\r\n  curve?: number,\r\n  speed?: number,\r\n  screenSpeed?: number,\r\n  maxDuraiton?: number\r\n};\r\n\r\n/**\r\n * This class adapts mapbox-gl-js Map#flyTo animation so it can be used in\r\n * react/redux architecture.\r\n * mapbox-gl-js flyTo : https://www.mapbox.com/mapbox-gl-js/api/#map#flyto.\r\n * It implements “Smooth and efficient zooming and panning.” algorithm by\r\n * \"Jarke J. van Wijk and Wim A.A. Nuij\"\r\n */\r\nexport default class ViewportFlyToInterpolator extends TransitionInterpolator {\r\n  speed: number;\r\n  propNames = VIEWPORT_TRANSITION_PROPS;\r\n\r\n  /**\r\n   * @param props {Object}\r\n   - `props.curve` (Number, optional, default: 1.414) - The zooming \"curve\" that will occur along the flight path.\r\n   - `props.speed` (Number, optional, default: 1.2) - The average speed of the animation defined in relation to `options.curve`, it linearly affects the duration, higher speed returns smaller durations and vice versa.\r\n   - `props.screenSpeed` (Number, optional) - The average speed of the animation measured in screenfuls per second. Similar to `opts.speed` it linearly affects the duration,  when specified `opts.speed` is ignored.\r\n   - `props.maxDuration` (Number, optional) - Maximum duration in milliseconds, if calculated duration exceeds this value, `0` is returned.\r\n   */\r\n  constructor(props: FlyToInterpolatorProps = {}) {\r\n    super();\r\n\r\n    this.props = Object.assign({}, DEFAULT_OPTS, props);\r\n  }\r\n\r\n  props: FlyToInterpolatorProps;\r\n\r\n  initializeProps(startProps: MapStateProps, endProps: MapStateProps) {\r\n    const startViewportProps = {};\r\n    const endViewportProps = {};\r\n\r\n    // Check minimum required props\r\n    for (const key of REQUIRED_PROPS) {\r\n      const startValue = startProps[key];\r\n      const endValue = endProps[key];\r\n      assert(isValid(startValue) && isValid(endValue), `${key} must be supplied for transition`);\r\n      startViewportProps[key] = startValue;\r\n      endViewportProps[key] = getEndValueByShortestPath(key, startValue, endValue);\r\n    }\r\n\r\n    for (const key of LINEARLY_INTERPOLATED_PROPS) {\r\n      const startValue = startProps[key] || 0;\r\n      const endValue = endProps[key] || 0;\r\n      startViewportProps[key] = startValue;\r\n      endViewportProps[key] = getEndValueByShortestPath(key, startValue, endValue);\r\n    }\r\n\r\n    return {\r\n      start: startViewportProps,\r\n      end: endViewportProps\r\n    };\r\n  }\r\n\r\n  interpolateProps(startProps: MapStateProps, endProps: MapStateProps, t: number) {\r\n    const viewport = flyToViewport(startProps, endProps, t, this.props);\r\n\r\n    // Linearly interpolate 'bearing' and 'pitch' if exist.\r\n    for (const key of LINEARLY_INTERPOLATED_PROPS) {\r\n      viewport[key] = lerp(startProps[key], endProps[key], t);\r\n    }\r\n\r\n    return viewport;\r\n  }\r\n\r\n  // computes the transition duration\r\n  getDuration(startProps: MapStateProps, endProps: MapStateProps) {\r\n    let {transitionDuration} = endProps;\r\n    if (transitionDuration === 'auto') {\r\n      // auto calculate duration based on start and end props\r\n      transitionDuration = getFlyToDuration(startProps, endProps, this.props);\r\n    }\r\n    return transitionDuration;\r\n  }\r\n}\r\n","// @flow\r\nimport WebMercatorViewport from 'viewport-mercator-project';\r\n\r\nimport assert from '../assert';\r\nimport TransitionInterpolator from './transition-interpolator';\r\n\r\nimport {isValid, getEndValueByShortestPath} from './transition-utils';\r\nimport {lerp} from '../math-utils';\r\n\r\nimport type {MapStateProps} from '../map-state';\r\n\r\nconst VIEWPORT_TRANSITION_PROPS = ['longitude', 'latitude', 'zoom', 'bearing', 'pitch'];\r\n\r\ntype TransitionProps = MapStateProps & {\r\n  around: Array<number>,\r\n  aroundLngLat: Array<number>\r\n};\r\n\r\n/**\r\n * Performs linear interpolation of two viewports.\r\n */\r\nexport default class LinearInterpolator extends TransitionInterpolator {\r\n  /**\r\n   * @param opts {Object}\r\n   *  - opts.transitionProps {Array}] - list of props to apply linear transition to.\r\n   *  - opts.around {Array} - a screen point to zoom/rotate around\r\n   */\r\n  constructor(\r\n    opts: {\r\n      transitionProps?: Array<string>,\r\n      around?: Array<number>\r\n    } = {}\r\n  ) {\r\n    super();\r\n\r\n    if (Array.isArray(opts)) {\r\n      // backward compatibility\r\n      opts = {transitionProps: opts};\r\n    }\r\n\r\n    this.propNames = opts.transitionProps || VIEWPORT_TRANSITION_PROPS;\r\n    if (opts.around) {\r\n      this.around = opts.around;\r\n    }\r\n  }\r\n\r\n  around: Array<number>;\r\n\r\n  initializeProps(startProps: MapStateProps, endProps: MapStateProps) {\r\n    const startViewportProps = {};\r\n    const endViewportProps = {};\r\n\r\n    if (this.around) {\r\n      // anchor point in origin screen coordinates\r\n      startViewportProps.around = this.around;\r\n      // anchor point in spherical coordinates\r\n      const aroundLngLat = new WebMercatorViewport(startProps).unproject(this.around);\r\n      Object.assign(endViewportProps, endProps, {\r\n        // anchor point in destination screen coordinates\r\n        around: new WebMercatorViewport(endProps).project(aroundLngLat),\r\n        aroundLngLat\r\n      });\r\n    }\r\n\r\n    for (const key of this.propNames) {\r\n      const startValue = startProps[key];\r\n      const endValue = endProps[key];\r\n      assert(isValid(startValue) && isValid(endValue), `${key} must be supplied for transition`);\r\n\r\n      startViewportProps[key] = startValue;\r\n      endViewportProps[key] = getEndValueByShortestPath(key, startValue, endValue);\r\n    }\r\n\r\n    return {\r\n      start: startViewportProps,\r\n      end: endViewportProps\r\n    };\r\n  }\r\n\r\n  interpolateProps(startProps: TransitionProps, endProps: TransitionProps, t: number) {\r\n    const viewport = {};\r\n    for (const key of this.propNames) {\r\n      viewport[key] = lerp(startProps[key], endProps[key], t);\r\n    }\r\n\r\n    if (endProps.around) {\r\n      // zoom around provided point\r\n      const [longitude, latitude] = new WebMercatorViewport(\r\n        Object.assign({}, endProps, viewport)\r\n      ).getMapCenterByLngLatPosition({\r\n        lngLat: endProps.aroundLngLat,\r\n        // anchor point in current screen coordinates\r\n        pos: lerp(startProps.around, endProps.around, t)\r\n      });\r\n      viewport.longitude = longitude;\r\n      viewport.latitude = latitude;\r\n    }\r\n\r\n    return viewport;\r\n  }\r\n}\r\n","// @flow\r\nimport WebMercatorViewport, {normalizeViewportProps} from 'viewport-mercator-project';\r\nimport {TransitionInterpolator} from './transition';\r\nimport {clamp} from './math-utils';\r\nimport assert from './assert';\r\n\r\n// MAPBOX LIMITS\r\nexport const MAPBOX_LIMITS = {\r\n  minZoom: 0,\r\n  maxZoom: 24,\r\n  minPitch: 0,\r\n  maxPitch: 60\r\n};\r\n\r\nconst DEFAULT_STATE = {\r\n  pitch: 0,\r\n  bearing: 0,\r\n  altitude: 1.5\r\n};\r\n\r\ntype ViewportProps = {\r\n  width: number,\r\n  height: number,\r\n  latitude: number,\r\n  longitude: number,\r\n  zoom: number,\r\n  bearing: number,\r\n  pitch: number,\r\n  altitude: number,\r\n  maxZoom: number,\r\n  minZoom: number,\r\n  maxPitch: number,\r\n  minPitch: number,\r\n  transitionDuration: number,\r\n  transitionEasing: number => number,\r\n  transitionInterpolator: TransitionInterpolator,\r\n  transitionInterruption: number\r\n};\r\n\r\ntype InteractiveState = {\r\n  startPanLngLat?: Array<number>,\r\n  startZoomLngLat?: Array<number>,\r\n  startBearing?: number,\r\n  startPitch?: number,\r\n  startZoom?: number\r\n};\r\n\r\nexport type MapStateProps = ViewportProps &\r\n  InteractiveState & {\r\n    altitude?: number,\r\n    maxZoom?: number,\r\n    minZoom?: number,\r\n    maxPitch?: number,\r\n    minPitch?: number\r\n  };\r\n\r\nexport default class MapState {\r\n  constructor({\r\n    /** Mapbox viewport properties */\r\n    /** The width of the viewport */\r\n    width,\r\n    /** The height of the viewport */\r\n    height,\r\n    /** The latitude at the center of the viewport */\r\n    latitude,\r\n    /** The longitude at the center of the viewport */\r\n    longitude,\r\n    /** The tile zoom level of the map. */\r\n    zoom,\r\n    /** The bearing of the viewport in degrees */\r\n    bearing = DEFAULT_STATE.bearing,\r\n    /** The pitch of the viewport in degrees */\r\n    pitch = DEFAULT_STATE.pitch,\r\n    /**\r\n     * Specify the altitude of the viewport camera\r\n     * Unit: map heights, default 1.5\r\n     * Non-public API, see https://github.com/mapbox/mapbox-gl-js/issues/1137\r\n     */\r\n    altitude = DEFAULT_STATE.altitude,\r\n\r\n    /** Viewport constraints */\r\n    maxZoom = MAPBOX_LIMITS.maxZoom,\r\n    minZoom = MAPBOX_LIMITS.minZoom,\r\n    maxPitch = MAPBOX_LIMITS.maxPitch,\r\n    minPitch = MAPBOX_LIMITS.minPitch,\r\n\r\n    /** Transition props */\r\n    transitionDuration,\r\n    transitionEasing,\r\n    transitionInterpolator,\r\n    transitionInterruption,\r\n\r\n    /** Interaction states, required to calculate change during transform */\r\n    /* The point on map being grabbed when the operation first started */\r\n    startPanLngLat,\r\n    /* Center of the zoom when the operation first started */\r\n    startZoomLngLat,\r\n    /** Bearing when current perspective rotate operation started */\r\n    startBearing,\r\n    /** Pitch when current perspective rotate operation started */\r\n    startPitch,\r\n    /** Zoom when current zoom operation started */\r\n    startZoom\r\n  }: MapStateProps) {\r\n    assert(Number.isFinite(width), '`width` must be supplied');\r\n    assert(Number.isFinite(height), '`height` must be supplied');\r\n    assert(Number.isFinite(longitude), '`longitude` must be supplied');\r\n    assert(Number.isFinite(latitude), '`latitude` must be supplied');\r\n    assert(Number.isFinite(zoom), '`zoom` must be supplied');\r\n\r\n    this._viewportProps = this._applyConstraints({\r\n      width,\r\n      height,\r\n      latitude,\r\n      longitude,\r\n      zoom,\r\n      bearing,\r\n      pitch,\r\n      altitude,\r\n      maxZoom,\r\n      minZoom,\r\n      maxPitch,\r\n      minPitch,\r\n      transitionDuration,\r\n      transitionEasing,\r\n      transitionInterpolator,\r\n      transitionInterruption\r\n    });\r\n\r\n    this._interactiveState = {\r\n      startPanLngLat,\r\n      startZoomLngLat,\r\n      startBearing,\r\n      startPitch,\r\n      startZoom\r\n    };\r\n  }\r\n\r\n  _viewportProps: ViewportProps;\r\n  _interactiveState: InteractiveState;\r\n\r\n  /* Public API */\r\n\r\n  getViewportProps() {\r\n    return this._viewportProps;\r\n  }\r\n\r\n  getInteractiveState() {\r\n    return this._interactiveState;\r\n  }\r\n\r\n  /**\r\n   * Start panning\r\n   * @param {[Number, Number]} pos - position on screen where the pointer grabs\r\n   */\r\n  panStart({pos}: {pos: Array<number>}) {\r\n    return this._getUpdatedMapState({\r\n      startPanLngLat: this._unproject(pos)\r\n    });\r\n  }\r\n\r\n  /**\r\n   * Pan\r\n   * @param {[Number, Number]} pos - position on screen where the pointer is\r\n   * @param {[Number, Number], optional} startPos - where the pointer grabbed at\r\n   *   the start of the operation. Must be supplied of `panStart()` was not called\r\n   */\r\n  pan({pos, startPos}: {pos: Array<number>, startPos?: Array<number>}) {\r\n    const startPanLngLat = this._interactiveState.startPanLngLat || this._unproject(startPos);\r\n\r\n    if (!startPanLngLat) {\r\n      return this;\r\n    }\r\n\r\n    const [longitude, latitude] = this._calculateNewLngLat({\r\n      startPanLngLat,\r\n      pos\r\n    });\r\n\r\n    return this._getUpdatedMapState({\r\n      longitude,\r\n      latitude\r\n    });\r\n  }\r\n\r\n  /**\r\n   * End panning\r\n   * Must call if `panStart()` was called\r\n   */\r\n  panEnd() {\r\n    return this._getUpdatedMapState({\r\n      startPanLngLat: null\r\n    });\r\n  }\r\n\r\n  /**\r\n   * Start rotating\r\n   * @param {[Number, Number]} pos - position on screen where the center is\r\n   */\r\n  rotateStart({pos}: {pos: Array<number>}) {\r\n    return this._getUpdatedMapState({\r\n      startBearing: this._viewportProps.bearing,\r\n      startPitch: this._viewportProps.pitch\r\n    });\r\n  }\r\n\r\n  /**\r\n   * Rotate\r\n   * @param {Number} deltaScaleX - a number between [-1, 1] specifying the\r\n   *   change to bearing.\r\n   * @param {Number} deltaScaleY - a number between [-1, 1] specifying the\r\n   *   change to pitch. -1 sets to minPitch and 1 sets to maxPitch.\r\n   */\r\n  rotate({deltaScaleX = 0, deltaScaleY = 0}: {deltaScaleX?: number, deltaScaleY?: number}) {\r\n    const {startBearing, startPitch} = this._interactiveState;\r\n\r\n    if (!Number.isFinite(startBearing) || !Number.isFinite(startPitch)) {\r\n      return this;\r\n    }\r\n\r\n    const {pitch, bearing} = this._calculateNewPitchAndBearing({\r\n      deltaScaleX,\r\n      deltaScaleY,\r\n      startBearing: startBearing || 0,\r\n      startPitch: startPitch || 0\r\n    });\r\n\r\n    return this._getUpdatedMapState({\r\n      bearing,\r\n      pitch\r\n    });\r\n  }\r\n\r\n  /**\r\n   * End rotating\r\n   * Must call if `rotateStart()` was called\r\n   */\r\n  rotateEnd() {\r\n    return this._getUpdatedMapState({\r\n      startBearing: null,\r\n      startPitch: null\r\n    });\r\n  }\r\n\r\n  /**\r\n   * Start zooming\r\n   * @param {[Number, Number]} pos - position on screen where the center is\r\n   */\r\n  zoomStart({pos}: {pos: Array<number>}) {\r\n    return this._getUpdatedMapState({\r\n      startZoomLngLat: this._unproject(pos),\r\n      startZoom: this._viewportProps.zoom\r\n    });\r\n  }\r\n\r\n  /**\r\n   * Zoom\r\n   * @param {[Number, Number]} pos - position on screen where the current center is\r\n   * @param {[Number, Number]} startPos - the center position at\r\n   *   the start of the operation. Must be supplied of `zoomStart()` was not called\r\n   * @param {Number} scale - a number between [0, 1] specifying the accumulated\r\n   *   relative scale.\r\n   */\r\n  zoom({pos, startPos, scale}: {pos: Array<number>, startPos?: Array<number>, scale: number}) {\r\n    assert(scale > 0, '`scale` must be a positive number');\r\n\r\n    // Make sure we zoom around the current mouse position rather than map center\r\n    let {startZoom, startZoomLngLat} = this._interactiveState;\r\n\r\n    if (!Number.isFinite(startZoom)) {\r\n      // We have two modes of zoom:\r\n      // scroll zoom that are discrete events (transform from the current zoom level),\r\n      // and pinch zoom that are continuous events (transform from the zoom level when\r\n      // pinch started).\r\n      // If startZoom state is defined, then use the startZoom state;\r\n      // otherwise assume discrete zooming\r\n      startZoom = this._viewportProps.zoom;\r\n      startZoomLngLat = this._unproject(startPos) || this._unproject(pos);\r\n    }\r\n\r\n    // take the start lnglat and put it where the mouse is down.\r\n    assert(\r\n      startZoomLngLat,\r\n      '`startZoomLngLat` prop is required ' +\r\n        'for zoom behavior to calculate where to position the map.'\r\n    );\r\n\r\n    const zoom = this._calculateNewZoom({scale, startZoom: startZoom || 0});\r\n\r\n    const zoomedViewport = new WebMercatorViewport(Object.assign({}, this._viewportProps, {zoom}));\r\n    // $FlowFixMe\r\n    const [longitude, latitude] = zoomedViewport.getMapCenterByLngLatPosition({\r\n      lngLat: startZoomLngLat,\r\n      pos\r\n    });\r\n\r\n    return this._getUpdatedMapState({\r\n      zoom,\r\n      longitude,\r\n      latitude\r\n    });\r\n  }\r\n\r\n  /**\r\n   * End zooming\r\n   * Must call if `zoomStart()` was called\r\n   */\r\n  zoomEnd() {\r\n    return this._getUpdatedMapState({\r\n      startZoomLngLat: null,\r\n      startZoom: null\r\n    });\r\n  }\r\n\r\n  /* Private methods */\r\n\r\n  _getUpdatedMapState(newProps: any): MapState {\r\n    // Update _viewportProps\r\n    return new MapState(Object.assign({}, this._viewportProps, this._interactiveState, newProps));\r\n  }\r\n\r\n  // Apply any constraints (mathematical or defined by _viewportProps) to map state\r\n  _applyConstraints(props: ViewportProps): ViewportProps {\r\n    // Ensure zoom is within specified range\r\n    const {maxZoom, minZoom, zoom} = props;\r\n    props.zoom = clamp(zoom, minZoom, maxZoom);\r\n\r\n    // Ensure pitch is within specified range\r\n    const {maxPitch, minPitch, pitch} = props;\r\n    props.pitch = clamp(pitch, minPitch, maxPitch);\r\n\r\n    Object.assign(props, normalizeViewportProps(props));\r\n\r\n    return props;\r\n  }\r\n\r\n  _unproject(pos: ?Array<number>): ?Array<number> {\r\n    const viewport = new WebMercatorViewport(this._viewportProps);\r\n    return pos && viewport.unproject(pos);\r\n  }\r\n\r\n  // Calculate a new lnglat based on pixel dragging position\r\n  _calculateNewLngLat({\r\n    startPanLngLat,\r\n    pos\r\n  }: {\r\n    startPanLngLat: Array<number>,\r\n    pos: Array<number>\r\n  }): Array<number> {\r\n    const viewport = new WebMercatorViewport(this._viewportProps);\r\n    return viewport.getMapCenterByLngLatPosition({\r\n      lngLat: startPanLngLat,\r\n      pos\r\n    });\r\n  }\r\n\r\n  // Calculates new zoom\r\n  _calculateNewZoom({scale, startZoom}: {scale: number, startZoom: number}): number {\r\n    const {maxZoom, minZoom} = this._viewportProps;\r\n    const zoom = startZoom + Math.log2(scale);\r\n    return clamp(zoom, minZoom, maxZoom);\r\n  }\r\n\r\n  // Calculates a new pitch and bearing from a position (coming from an event)\r\n  _calculateNewPitchAndBearing({\r\n    deltaScaleX,\r\n    deltaScaleY,\r\n    startBearing,\r\n    startPitch\r\n  }: {\r\n    deltaScaleX: number,\r\n    deltaScaleY: number,\r\n    startBearing: number,\r\n    startPitch: number\r\n  }) {\r\n    // clamp deltaScaleY to [-1, 1] so that rotation is constrained between minPitch and maxPitch.\r\n    // deltaScaleX does not need to be clamped as bearing does not have constraints.\r\n    deltaScaleY = clamp(deltaScaleY, -1, 1);\r\n\r\n    const {minPitch, maxPitch} = this._viewportProps;\r\n\r\n    const bearing = startBearing + 180 * deltaScaleX;\r\n    let pitch = startPitch;\r\n    if (deltaScaleY > 0) {\r\n      // Gradually increase pitch\r\n      pitch = startPitch + deltaScaleY * (maxPitch - startPitch);\r\n    } else if (deltaScaleY < 0) {\r\n      // Gradually decrease pitch\r\n      pitch = startPitch - deltaScaleY * (minPitch - startPitch);\r\n    }\r\n\r\n    return {\r\n      pitch,\r\n      bearing\r\n    };\r\n  }\r\n}\r\n","// @flow\r\nimport {MAPBOX_LIMITS} from './map-state';\r\n\r\nimport type {ViewState} from '../mapbox/mapbox';\r\n\r\nfunction decapitalize(s: string): string {\r\n  return s[0].toLowerCase() + s.slice(1);\r\n}\r\n\r\n// Checks a visibilityConstraints object to see if the map should be displayed\r\n// Returns true if props are within the constraints\r\nexport function checkVisibilityConstraints(props: ViewState, constraints: any = MAPBOX_LIMITS) {\r\n  for (const constraintName in constraints) {\r\n    // in the format of min* or max*\r\n    const type = constraintName.slice(0, 3);\r\n    const propName = decapitalize(constraintName.slice(3));\r\n\r\n    if (type === 'min' && props[propName] < constraints[constraintName]) {\r\n      return false;\r\n    }\r\n    if (type === 'max' && props[propName] > constraints[constraintName]) {\r\n      return false;\r\n    }\r\n  }\r\n  return true;\r\n}\r\n","// @flow\r\n\r\nimport {createContext} from 'react';\r\n\r\nimport type {WebMercatorViewport} from 'viewport-mercator-project';\r\n\r\nexport type MapContextProps = {\r\n  viewport: ?WebMercatorViewport,\r\n\r\n  map: any,\r\n  mapContainer: null | HTMLDivElement,\r\n\r\n  onViewStateChange: ?Function,\r\n  onViewportChange: ?Function,\r\n\r\n  isDragging: boolean,\r\n  eventManager: any\r\n};\r\n\r\nexport default createContext<MapContextProps>({\r\n  /* Map context */\r\n\r\n  // Viewport\r\n  viewport: null,\r\n  // mapboxgl.Map instance\r\n  map: null,\r\n  // DOM element that contains the map\r\n  mapContainer: null,\r\n\r\n  /* Interactive-only context */\r\n  onViewportChange: null,\r\n  onViewStateChange: null,\r\n\r\n  // EventManager instance\r\n  eventManager: null,\r\n  // whether the map is being dragged\r\n  isDragging: false\r\n});\r\n","// @flow\r\n// Copyright (c) 2015 Uber Technologies, Inc.\r\n\r\n// Permission is hereby granted, free of charge, to any person obtaining a copy\r\n// of this software and associated documentation files (the \"Software\"), to deal\r\n// in the Software without restriction, including without limitation the rights\r\n// to use, copy, modify, merge, publish, distribute, sublicense, and/or sell\r\n// copies of the Software, and to permit persons to whom the Software is\r\n// furnished to do so, subject to the following conditions:\r\n\r\n// The above copyright notice and this permission notice shall be included in\r\n// all copies or substantial portions of the Software.\r\n\r\n// THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\r\n// IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\r\n// FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE\r\n// AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER\r\n// LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,\r\n// OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN\r\n// THE SOFTWARE.\r\nimport React, {PureComponent, createRef} from 'react';\r\nimport PropTypes from 'prop-types';\r\n\r\nimport {normalizeStyle} from '../utils/style-utils';\r\n\r\nimport WebMercatorViewport from 'viewport-mercator-project';\r\nimport AutoSizer from 'react-virtualized-auto-sizer';\r\n\r\nimport Mapbox from '../mapbox/mapbox';\r\nimport mapboxgl from '../utils/mapboxgl';\r\nimport {checkVisibilityConstraints} from '../utils/map-constraints';\r\nimport {MAPBOX_LIMITS} from '../utils/map-state';\r\nimport MapContext from './map-context';\r\n\r\nimport type {ViewState} from '../mapbox/mapbox';\r\n\r\n/* eslint-disable max-len */\r\nconst TOKEN_DOC_URL =\r\n  'https://uber.github.io/react-map-gl/#/Documentation/getting-started/about-mapbox-tokens';\r\nconst NO_TOKEN_WARNING = 'A valid API access token is required to use Mapbox data';\r\n/* eslint-disable max-len */\r\n\r\nfunction noop() {}\r\n\r\nconst UNAUTHORIZED_ERROR_CODE = 401;\r\n\r\nconst CONTAINER_STYLE = {\r\n  position: 'absolute',\r\n  width: '100%',\r\n  height: '100%',\r\n  overflow: 'hidden'\r\n};\r\n\r\nconst propTypes = Object.assign({}, Mapbox.propTypes, {\r\n  /** The dimensions of the map **/\r\n  width: PropTypes.oneOfType([PropTypes.number, PropTypes.string]),\r\n  height: PropTypes.oneOfType([PropTypes.number, PropTypes.string]),\r\n\r\n  /** Callback when map size changes **/\r\n  onResize: PropTypes.func,\r\n  /** There are known issues with style diffing. As stopgap, add option to prevent style diffing. */\r\n  preventStyleDiffing: PropTypes.bool,\r\n  /** Hide invalid token warning even if request fails */\r\n  disableTokenWarning: PropTypes.bool,\r\n  /** Whether the map is visible */\r\n  visible: PropTypes.bool,\r\n  /** Custom class name for the map */\r\n  className: PropTypes.string,\r\n  /** Custom CSS for the container */\r\n  style: PropTypes.object,\r\n\r\n  /** Advanced features */\r\n  // Contraints for displaying the map. If not met, then the map is hidden.\r\n  // Experimental! May be changed in minor version updates.\r\n  visibilityConstraints: PropTypes.object\r\n});\r\n\r\nconst defaultProps = Object.assign({}, Mapbox.defaultProps, {\r\n  preventStyleDiffing: false,\r\n  disableTokenWarning: false,\r\n  visible: true,\r\n  onResize: noop,\r\n  className: '',\r\n  style: null,\r\n  visibilityConstraints: MAPBOX_LIMITS\r\n});\r\n\r\nexport type StaticMapProps = {\r\n  gl?: any,\r\n  width: number | string,\r\n  height: number | string,\r\n  preventStyleDiffing: boolean,\r\n  disableTokenWarning: boolean,\r\n  visible: boolean,\r\n  className: string,\r\n  style: any,\r\n  visibilityConstraints: any,\r\n  children?: any,\r\n  onLoad: Function,\r\n  onError: Function,\r\n  onResize: Function,\r\n  mapStyle: any,\r\n  visible: boolean,\r\n  viewState?: ViewState,\r\n  longitude: number,\r\n  latitude: number,\r\n  zoom: number,\r\n  bearing: number,\r\n  pitch: number,\r\n  altitude?: number\r\n};\r\n\r\ntype State = {\r\n  accessTokenInvalid: boolean\r\n};\r\n\r\nexport default class StaticMap extends PureComponent<StaticMapProps, State> {\r\n  static supported() {\r\n    return mapboxgl && mapboxgl.supported();\r\n  }\r\n\r\n  static propTypes: any = propTypes;\r\n  static defaultProps: StaticMapProps = defaultProps;\r\n\r\n  state: State = {\r\n    accessTokenInvalid: false\r\n  };\r\n\r\n  componentDidMount() {\r\n    if (!StaticMap.supported()) {\r\n      return;\r\n    }\r\n    const {mapStyle} = this.props;\r\n\r\n    this._mapbox = new Mapbox(\r\n      // $FlowFixMe\r\n      Object.assign({}, this.props, {\r\n        mapboxgl, // Handle to mapbox-gl library\r\n        width: this._width,\r\n        height: this._height,\r\n        container: this._mapboxMapRef.current,\r\n        onError: this._mapboxMapError,\r\n        mapStyle: normalizeStyle(mapStyle)\r\n      })\r\n    );\r\n    this._map = this._mapbox.getMap();\r\n  }\r\n\r\n  componentDidUpdate(prevProps: StaticMapProps) {\r\n    if (this._mapbox) {\r\n      this._updateMapStyle(prevProps, this.props);\r\n      this._updateMapProps(this.props);\r\n    }\r\n  }\r\n\r\n  componentWillUnmount() {\r\n    if (this._mapbox) {\r\n      this._mapbox.finalize();\r\n      this._mapbox = null;\r\n      this._map = null;\r\n    }\r\n  }\r\n\r\n  _mapbox: any = null;\r\n  _map: any = null;\r\n  _mapboxMapRef: {current: null | HTMLDivElement} = createRef();\r\n  _mapContainerRef: {current: null | HTMLDivElement} = createRef();\r\n  _queryParams: any = {};\r\n  _width: number = 0;\r\n  _height: number = 0;\r\n\r\n  // External apps can access map this way\r\n  getMap = () => {\r\n    return this._map;\r\n  };\r\n\r\n  /** Uses Mapbox's\r\n   * queryRenderedFeatures API to find features at point or in a bounding box.\r\n   * https://www.mapbox.com/mapbox-gl-js/api/#Map#queryRenderedFeatures\r\n   * To query only some of the layers, set the `interactive` property in the\r\n   * layer style to `true`.\r\n   * @param {[Number, Number]|[[Number, Number], [Number, Number]]} geometry -\r\n   *   Point or an array of two points defining the bounding box\r\n   * @param {Object} options - query options\r\n   */\r\n  queryRenderedFeatures = (geometry: any, options: any = {}) => {\r\n    return this._map.queryRenderedFeatures(geometry, options);\r\n  };\r\n\r\n  // Note: needs to be called after render (e.g. in componentDidUpdate)\r\n  _updateMapSize(width: number, height: number) {\r\n    if (this._width !== width || this._height !== height) {\r\n      this._width = width;\r\n      this._height = height;\r\n      this._updateMapProps(this.props);\r\n    }\r\n  }\r\n\r\n  _updateMapStyle(oldProps: StaticMapProps, newProps: StaticMapProps) {\r\n    const mapStyle = newProps.mapStyle;\r\n    const oldMapStyle = oldProps.mapStyle;\r\n    if (mapStyle !== oldMapStyle && mapStyle) {\r\n      this._map.setStyle(normalizeStyle(mapStyle), {\r\n        diff: !this.props.preventStyleDiffing\r\n      });\r\n    }\r\n  }\r\n\r\n  _updateMapProps(props: StaticMapProps) {\r\n    if (!this._mapbox) {\r\n      return;\r\n    }\r\n    this._mapbox.setProps(\r\n      Object.assign({}, props, {\r\n        width: this._width,\r\n        height: this._height\r\n      })\r\n    );\r\n  }\r\n\r\n  // Handle map error\r\n  _mapboxMapError = (evt: {\r\n    error?: {\r\n      message: string,\r\n      status: number\r\n    },\r\n    status: number\r\n  }) => {\r\n    const statusCode = (evt.error && evt.error.status) || evt.status;\r\n    if (statusCode === UNAUTHORIZED_ERROR_CODE && !this.state.accessTokenInvalid) {\r\n      // Mapbox throws unauthorized error - invalid token\r\n      console.error(NO_TOKEN_WARNING); // eslint-disable-line\r\n      this.setState({accessTokenInvalid: true});\r\n    }\r\n    this.props.onError(evt);\r\n  };\r\n\r\n  _renderNoTokenWarning() {\r\n    if (this.state.accessTokenInvalid && !this.props.disableTokenWarning) {\r\n      const style = {\r\n        position: 'absolute',\r\n        left: 0,\r\n        top: 0\r\n      };\r\n      return (\r\n        <div key=\"warning\" id=\"no-token-warning\" style={style}>\r\n          <h3 key=\"header\">NO_TOKEN_WARNING</h3>\r\n          <div key=\"text\">For information on setting up your basemap, read</div>\r\n          <a key=\"link\" href={TOKEN_DOC_URL}>\r\n            Note on Map Tokens\r\n          </a>\r\n        </div>\r\n      );\r\n    }\r\n\r\n    return null;\r\n  }\r\n\r\n  _renderOverlays(dimensions: {width?: number, height?: number}) {\r\n    const {width = Number(this.props.width), height = Number(this.props.height)} = dimensions;\r\n    this._updateMapSize(width, height);\r\n\r\n    return (\r\n      <MapContext.Consumer>\r\n        {interactiveContext => {\r\n          const context = {\r\n            ...interactiveContext,\r\n            // $FlowFixMe\r\n            viewport: new WebMercatorViewport({\r\n              ...this.props,\r\n              ...this.props.viewState,\r\n              width,\r\n              height\r\n            }),\r\n            map: this._map,\r\n            mapContainer: interactiveContext.mapContainer || this._mapContainerRef.current\r\n          };\r\n          return (\r\n            <MapContext.Provider value={context}>\r\n              <div key=\"map-overlays\" className=\"overlays\" style={CONTAINER_STYLE}>\r\n                {this.props.children}\r\n              </div>\r\n            </MapContext.Provider>\r\n          );\r\n        }}\r\n      </MapContext.Consumer>\r\n    );\r\n  }\r\n\r\n  render() {\r\n    const {className, width, height, style, visibilityConstraints} = this.props;\r\n    const mapContainerStyle = Object.assign({position: 'relative'}, style, {\r\n      width,\r\n      height\r\n    });\r\n\r\n    const visible =\r\n      this.props.visible &&\r\n      checkVisibilityConstraints(this.props.viewState || this.props, visibilityConstraints);\r\n\r\n    const mapStyle = Object.assign({}, CONTAINER_STYLE, {\r\n      visibility: visible ? 'inherit' : 'hidden'\r\n    });\r\n\r\n    return (\r\n      <div key=\"map-container\" style={mapContainerStyle} ref={this._mapContainerRef}>\r\n        <div key=\"map-mapbox\" ref={this._mapboxMapRef} style={mapStyle} className={className} />\r\n        {/* AutoSizer is a pure component and does not rerender when map props change */}\r\n        {/* rebind the callback so that it's triggered every render pass */}\r\n        <AutoSizer\r\n          key=\"autosizer\"\r\n          disableWidth={Number.isFinite(width)}\r\n          disableHeight={Number.isFinite(height)}\r\n          onResize={this.props.onResize}\r\n        >\r\n          {this._renderOverlays.bind(this)}\r\n        </AutoSizer>\r\n        {this._renderNoTokenWarning()}\r\n      </div>\r\n    );\r\n  }\r\n}\r\n","export default null;\r\n","// @flow\r\n/* global requestAnimationFrame, cancelAnimationFrame */\r\nimport assert from './assert';\r\nimport {TransitionInterpolator, LinearInterpolator} from './transition';\r\nimport MapState from './map-state';\r\n\r\nimport type {MapStateProps} from './map-state';\r\n\r\nconst noop = () => {};\r\n\r\n// crops the old easing function from x0 to 1 where x0 is the interruption point\r\n// returns a new easing function with domain [0, 1] and range [0, 1]\r\nexport function cropEasingFunction(easing: number => number, x0: number): number => number {\r\n  const y0 = easing(x0);\r\n  return (t: number) => (1 / (1 - y0)) * (easing(t * (1 - x0) + x0) - y0);\r\n}\r\n\r\nexport const TRANSITION_EVENTS = {\r\n  BREAK: 1,\r\n  SNAP_TO_END: 2,\r\n  IGNORE: 3,\r\n  UPDATE: 4\r\n};\r\n\r\nconst DEFAULT_PROPS = {\r\n  transitionDuration: 0,\r\n  transitionEasing: (t: number) => t,\r\n  transitionInterpolator: new LinearInterpolator(),\r\n  transitionInterruption: TRANSITION_EVENTS.BREAK,\r\n  onTransitionStart: noop,\r\n  onTransitionInterrupt: noop,\r\n  onTransitionEnd: noop,\r\n  onViewportChange: noop,\r\n  onStateChange: noop\r\n};\r\n\r\nexport type ViewportProps = MapStateProps & {\r\n  onTransitionStart: Function,\r\n  onTransitionInterrupt: Function,\r\n  onTransitionEnd: Function,\r\n  onViewportChange: Function,\r\n  onStateChange: Function\r\n};\r\n\r\ntype TransitionState = {\r\n  propsInTransition: any,\r\n  interactionState: any,\r\n  startProps: MapStateProps,\r\n  endProps: MapStateProps,\r\n\r\n  duration: number,\r\n  easing: number => number,\r\n  interpolator: TransitionInterpolator,\r\n  interruption: number,\r\n\r\n  startTime: number\r\n};\r\n\r\nexport default class TransitionManager {\r\n  static defaultProps = DEFAULT_PROPS;\r\n\r\n  constructor(props?: ViewportProps, getTime: Function) {\r\n    if (props) {\r\n      this.props = props;\r\n    }\r\n    this.time = getTime || Date.now;\r\n  }\r\n\r\n  props: ViewportProps;\r\n  state: TransitionState;\r\n  time: () => number;\r\n\r\n  _animationFrame: ?AnimationFrameID = null;\r\n\r\n  // Returns current transitioned viewport.\r\n  getViewportInTransition() {\r\n    return this._animationFrame ? this.state.propsInTransition : null;\r\n  }\r\n\r\n  // Process the viewport change, either ignore or trigger a new transiton.\r\n  // Return true if a new transition is triggered, false otherwise.\r\n  processViewportChange(nextProps: ViewportProps) {\r\n    const currentProps = this.props;\r\n    // Set this.props here as '_triggerTransition' calls '_updateViewport' that uses this.props.\r\n    this.props = nextProps;\r\n\r\n    // NOTE: Be cautious re-ordering statements in this function.\r\n    if (this._shouldIgnoreViewportChange(currentProps, nextProps)) {\r\n      return false;\r\n    }\r\n\r\n    if (this._isTransitionEnabled(nextProps)) {\r\n      const startProps = Object.assign({}, currentProps);\r\n      const endProps = Object.assign({}, nextProps);\r\n\r\n      if (this._isTransitionInProgress()) {\r\n        currentProps.onTransitionInterrupt();\r\n\r\n        if (this.state.interruption === TRANSITION_EVENTS.SNAP_TO_END) {\r\n          Object.assign(startProps, this.state.endProps);\r\n        } else {\r\n          Object.assign(startProps, this.state.propsInTransition);\r\n        }\r\n\r\n        if (this.state.interruption === TRANSITION_EVENTS.UPDATE) {\r\n          const currentTime = this.time();\r\n          const x0 = (currentTime - this.state.startTime) / this.state.duration;\r\n          endProps.transitionDuration = this.state.duration - (currentTime - this.state.startTime);\r\n          endProps.transitionEasing = cropEasingFunction(this.state.easing, x0);\r\n          endProps.transitionInterpolator = startProps.transitionInterpolator;\r\n        }\r\n      }\r\n      endProps.onTransitionStart();\r\n\r\n      this._triggerTransition(startProps, endProps);\r\n\r\n      return true;\r\n    }\r\n\r\n    if (this._isTransitionInProgress()) {\r\n      currentProps.onTransitionInterrupt();\r\n      this._endTransition();\r\n    }\r\n\r\n    return false;\r\n  }\r\n\r\n  // Helper methods\r\n\r\n  _isTransitionInProgress(): boolean {\r\n    return Boolean(this._animationFrame);\r\n  }\r\n\r\n  _isTransitionEnabled(props: ViewportProps): boolean {\r\n    const {transitionDuration, transitionInterpolator} = props;\r\n    return (\r\n      (transitionDuration > 0 || transitionDuration === 'auto') && Boolean(transitionInterpolator)\r\n    );\r\n  }\r\n\r\n  _isUpdateDueToCurrentTransition(props: ViewportProps): boolean {\r\n    if (this.state.propsInTransition) {\r\n      return this.state.interpolator.arePropsEqual(props, this.state.propsInTransition);\r\n    }\r\n    return false;\r\n  }\r\n\r\n  _shouldIgnoreViewportChange(currentProps: ViewportProps, nextProps: ViewportProps): boolean {\r\n    if (!currentProps) {\r\n      return true;\r\n    }\r\n    if (this._isTransitionInProgress()) {\r\n      // Ignore update if it is requested to be ignored\r\n      return (\r\n        this.state.interruption === TRANSITION_EVENTS.IGNORE ||\r\n        // Ignore update if it is due to current active transition.\r\n        this._isUpdateDueToCurrentTransition(nextProps)\r\n      );\r\n    }\r\n    if (this._isTransitionEnabled(nextProps)) {\r\n      // Ignore if none of the viewport props changed.\r\n      return nextProps.transitionInterpolator.arePropsEqual(currentProps, nextProps);\r\n    }\r\n\r\n    return true;\r\n  }\r\n\r\n  _triggerTransition(startProps: ViewportProps, endProps: ViewportProps) {\r\n    assert(this._isTransitionEnabled(endProps), 'Transition is not enabled');\r\n\r\n    if (this._animationFrame) {\r\n      cancelAnimationFrame(this._animationFrame);\r\n    }\r\n\r\n    // update transitionDuration for 'auto' mode\r\n    const {transitionInterpolator} = endProps;\r\n    const duration = transitionInterpolator.getDuration\r\n      ? transitionInterpolator.getDuration(startProps, endProps)\r\n      : endProps.transitionDuration;\r\n\r\n    const initialProps = endProps.transitionInterpolator.initializeProps(startProps, endProps);\r\n\r\n    const interactionState = {\r\n      inTransition: true,\r\n      isZooming: startProps.zoom !== endProps.zoom,\r\n      isPanning:\r\n        startProps.longitude !== endProps.longitude || startProps.latitude !== endProps.latitude,\r\n      isRotating: startProps.bearing !== endProps.bearing || startProps.pitch !== endProps.pitch\r\n    };\r\n\r\n    this.state = {\r\n      // Save current transition props\r\n      duration,\r\n      easing: endProps.transitionEasing,\r\n      interpolator: endProps.transitionInterpolator,\r\n      interruption: endProps.transitionInterruption,\r\n\r\n      startTime: this.time(),\r\n      startProps: initialProps.start,\r\n      endProps: initialProps.end,\r\n      animation: null,\r\n      propsInTransition: {},\r\n      interactionState\r\n    };\r\n    this._onTransitionFrame();\r\n    this.props.onStateChange(interactionState);\r\n  }\r\n\r\n  _onTransitionFrame = () => {\r\n    // _updateViewport() may cancel the animation\r\n    this._animationFrame = requestAnimationFrame(this._onTransitionFrame);\r\n    this._updateViewport();\r\n  };\r\n\r\n  _endTransition() {\r\n    if (this._animationFrame) {\r\n      cancelAnimationFrame(this._animationFrame);\r\n      this._animationFrame = null;\r\n    }\r\n    this.props.onStateChange({\r\n      inTransition: false,\r\n      isZooming: false,\r\n      isPanning: false,\r\n      isRotating: false\r\n    });\r\n  }\r\n\r\n  _updateViewport() {\r\n    // NOTE: Be cautious re-ordering statements in this function.\r\n    const currentTime = this.time();\r\n    const {startTime, duration, easing, interpolator, startProps, endProps} = this.state;\r\n    let shouldEnd = false;\r\n    let t = (currentTime - startTime) / duration;\r\n    if (t >= 1) {\r\n      t = 1;\r\n      shouldEnd = true;\r\n    }\r\n    t = easing(t);\r\n\r\n    const viewport = interpolator.interpolateProps(startProps, endProps, t);\r\n    // Normalize viewport props\r\n    const mapState = new MapState(Object.assign({}, this.props, viewport));\r\n    this.state.propsInTransition = mapState.getViewportProps();\r\n\r\n    this.props.onViewportChange(\r\n      this.state.propsInTransition,\r\n      this.state.interactionState,\r\n      this.props\r\n    );\r\n\r\n    if (shouldEnd) {\r\n      this._endTransition();\r\n      this.props.onTransitionEnd();\r\n    }\r\n  }\r\n}\r\n","// @flow\r\n// Copyright (c) 2015 Uber Technologies, Inc.\r\n\r\n// Permission is hereby granted, free of charge, to any person obtaining a copy\r\n// of this software and associated documentation files (the \"Software\"), to deal\r\n// in the Software without restriction, including without limitation the rights\r\n// to use, copy, modify, merge, publish, distribute, sublicense, and/or sell\r\n// copies of the Software, and to permit persons to whom the Software is\r\n// furnished to do so, subject to the following conditions:\r\n\r\n// The above copyright notice and this permission notice shall be included in\r\n// all copies or substantial portions of the Software.\r\n\r\n// THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\r\n// IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\r\n// FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE\r\n// AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER\r\n// LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,\r\n// OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN\r\n// THE SOFTWARE.\r\n\r\nimport MapState from './map-state';\r\nimport {LinearInterpolator} from './transition';\r\nimport TransitionManager, {TRANSITION_EVENTS} from './transition-manager';\r\nimport debounce from './debounce';\r\n\r\nimport type {MjolnirEvent} from 'mjolnir.js';\r\n\r\nconst NO_TRANSITION_PROPS = {\r\n  transitionDuration: 0\r\n};\r\nexport const LINEAR_TRANSITION_PROPS = {\r\n  transitionDuration: 300,\r\n  transitionEasing: (t: number) => t,\r\n  transitionInterpolator: new LinearInterpolator(),\r\n  transitionInterruption: TRANSITION_EVENTS.BREAK\r\n};\r\n\r\n// EVENT HANDLING PARAMETERS\r\nconst PITCH_MOUSE_THRESHOLD = 5;\r\nconst PITCH_ACCEL = 1.2;\r\nconst ZOOM_ACCEL = 0.01;\r\n\r\nconst EVENT_TYPES = {\r\n  WHEEL: ['wheel'],\r\n  PAN: ['panstart', 'panmove', 'panend'],\r\n  PINCH: ['pinchstart', 'pinchmove', 'pinchend', 'pinchcancel'],\r\n  DOUBLE_TAP: ['doubletap'],\r\n  KEYBOARD: ['keydown']\r\n};\r\n\r\n/**\r\n * @classdesc\r\n * A class that handles events and updates mercator style viewport parameters\r\n */\r\nexport default class MapController {\r\n  events: Array<string> = [];\r\n  mapState: MapState;\r\n  onViewportChange: Function;\r\n  onStateChange: Function;\r\n  mapStateProps: any;\r\n  eventManager: any;\r\n  scrollZoom: boolean = true;\r\n  dragPan: boolean = true;\r\n  dragRotate: boolean = true;\r\n  doubleClickZoom: boolean = true;\r\n  touchZoom: boolean = true;\r\n  touchRotate: boolean = false;\r\n  keyboard: boolean = true;\r\n\r\n  _state: any = {\r\n    isDragging: false\r\n  };\r\n  _events: any = {};\r\n  _transitionManager: TransitionManager = new TransitionManager();\r\n\r\n  constructor() {\r\n    (this: any).handleEvent = this.handleEvent.bind(this);\r\n    (this: any)._onWheelEnd = debounce(this._onWheelEnd, 100);\r\n  }\r\n\r\n  /**\r\n   * Callback for events\r\n   * @param {hammer.Event} event\r\n   */\r\n  handleEvent(event: MjolnirEvent) {\r\n    this.mapState = this.getMapState();\r\n\r\n    switch (event.type) {\r\n      case 'panstart':\r\n        return this._onPanStart(event);\r\n      case 'panmove':\r\n        return this._onPan(event);\r\n      case 'panend':\r\n        return this._onPanEnd(event);\r\n      case 'pinchstart':\r\n        return this._onPinchStart(event);\r\n      case 'pinchmove':\r\n        return this._onPinch(event);\r\n      case 'pinchcancel':\r\n      case 'pinchend':\r\n        return this._onPinchEnd(event);\r\n      case 'doubletap':\r\n        return this._onDoubleTap(event);\r\n      case 'wheel':\r\n        return this._onWheel(event);\r\n      case 'keydown':\r\n        return this._onKeyDown(event);\r\n      default:\r\n        return false;\r\n    }\r\n  }\r\n\r\n  /* Event utils */\r\n  // Event object: http://hammerjs.github.io/api/#event-object\r\n  getCenter(event: MjolnirEvent): Array<number> {\r\n    const {\r\n      offsetCenter: {x, y}\r\n    } = event;\r\n    return [x, y];\r\n  }\r\n\r\n  isFunctionKeyPressed(event: MjolnirEvent): boolean {\r\n    const {srcEvent} = event;\r\n    return Boolean(srcEvent.metaKey || srcEvent.altKey || srcEvent.ctrlKey || srcEvent.shiftKey);\r\n  }\r\n\r\n  setState = (newState: any) => {\r\n    Object.assign(this._state, newState);\r\n    if (this.onStateChange) {\r\n      this.onStateChange(this._state);\r\n    }\r\n  };\r\n\r\n  /* Callback util */\r\n  // formats map state and invokes callback function\r\n  updateViewport(newMapState: MapState, extraProps: any = {}, extraState: any = {}) {\r\n    const oldViewport = this.mapState ? this.mapState.getViewportProps() : this.mapStateProps;\r\n    const newViewport = Object.assign({}, newMapState.getViewportProps(), extraProps);\r\n\r\n    const viewStateChanged = Object.keys(newViewport).some(\r\n      key => oldViewport[key] !== newViewport[key]\r\n    );\r\n\r\n    // viewState has changed\r\n    if (viewStateChanged) {\r\n      this.onViewportChange(newViewport, extraState, oldViewport);\r\n    }\r\n\r\n    this.setState(Object.assign({}, newMapState.getInteractiveState(), extraState));\r\n  }\r\n\r\n  getMapState(overrides?: any): MapState {\r\n    return new MapState(Object.assign({}, this.mapStateProps, this._state, overrides));\r\n  }\r\n\r\n  /**\r\n   * Extract interactivity options\r\n   */\r\n  setOptions(options: any) {\r\n    const {\r\n      onViewportChange,\r\n      onStateChange,\r\n      eventManager = this.eventManager,\r\n\r\n      isInteractive = true,\r\n      scrollZoom = this.scrollZoom,\r\n      dragPan = this.dragPan,\r\n      dragRotate = this.dragRotate,\r\n      doubleClickZoom = this.doubleClickZoom,\r\n      touchZoom = this.touchZoom,\r\n      touchRotate = this.touchRotate,\r\n      keyboard = this.keyboard\r\n    } = options;\r\n\r\n    this.onViewportChange = onViewportChange;\r\n    this.onStateChange = onStateChange;\r\n\r\n    const dimensionChanged = !this.mapStateProps || this.mapStateProps.height !== options.height;\r\n\r\n    this.mapStateProps = options;\r\n\r\n    if (dimensionChanged) {\r\n      // Dimensions changed, normalize the props\r\n      this.updateViewport(new MapState(options));\r\n    }\r\n    // Update transition\r\n    this._transitionManager.processViewportChange(\r\n      Object.assign({}, options, {\r\n        onStateChange: this.setState\r\n      })\r\n    );\r\n\r\n    if (this.eventManager !== eventManager) {\r\n      // EventManager has changed\r\n      this.eventManager = eventManager;\r\n      this._events = {};\r\n      this.toggleEvents(this.events, true);\r\n    }\r\n\r\n    // Register/unregister events\r\n    this.toggleEvents(EVENT_TYPES.WHEEL, isInteractive && scrollZoom);\r\n    this.toggleEvents(EVENT_TYPES.PAN, isInteractive && (dragPan || dragRotate));\r\n    this.toggleEvents(EVENT_TYPES.PINCH, isInteractive && (touchZoom || touchRotate));\r\n    this.toggleEvents(EVENT_TYPES.DOUBLE_TAP, isInteractive && doubleClickZoom);\r\n    this.toggleEvents(EVENT_TYPES.KEYBOARD, isInteractive && keyboard);\r\n\r\n    // Interaction toggles\r\n    this.scrollZoom = scrollZoom;\r\n    this.dragPan = dragPan;\r\n    this.dragRotate = dragRotate;\r\n    this.doubleClickZoom = doubleClickZoom;\r\n    this.touchZoom = touchZoom;\r\n    this.touchRotate = touchRotate;\r\n    this.keyboard = keyboard;\r\n  }\r\n\r\n  toggleEvents(eventNames: Array<string>, enabled: boolean) {\r\n    if (this.eventManager) {\r\n      eventNames.forEach(eventName => {\r\n        if (this._events[eventName] !== enabled) {\r\n          this._events[eventName] = enabled;\r\n          if (enabled) {\r\n            this.eventManager.on(eventName, this.handleEvent);\r\n          } else {\r\n            this.eventManager.off(eventName, this.handleEvent);\r\n          }\r\n        }\r\n      });\r\n    }\r\n  }\r\n\r\n  /* Event handlers */\r\n  // Default handler for the `panstart` event.\r\n  _onPanStart(event: MjolnirEvent) {\r\n    const pos = this.getCenter(event);\r\n    const newMapState = this.mapState.panStart({pos}).rotateStart({pos});\r\n    this.updateViewport(newMapState, NO_TRANSITION_PROPS, {isDragging: true});\r\n    return true;\r\n  }\r\n\r\n  // Default handler for the `panmove` event.\r\n  _onPan(event: MjolnirEvent) {\r\n    return this.isFunctionKeyPressed(event) || event.rightButton\r\n      ? this._onPanRotate(event)\r\n      : this._onPanMove(event);\r\n  }\r\n\r\n  // Default handler for the `panend` event.\r\n  _onPanEnd(event: MjolnirEvent) {\r\n    const newMapState = this.mapState.panEnd().rotateEnd();\r\n    this.updateViewport(newMapState, null, {\r\n      isDragging: false,\r\n      isPanning: false,\r\n      isRotating: false\r\n    });\r\n    return true;\r\n  }\r\n\r\n  // Default handler for panning to move.\r\n  // Called by `_onPan` when panning without function key pressed.\r\n  _onPanMove(event: MjolnirEvent) {\r\n    if (!this.dragPan) {\r\n      return false;\r\n    }\r\n    const pos = this.getCenter(event);\r\n    const newMapState = this.mapState.pan({pos});\r\n    this.updateViewport(newMapState, NO_TRANSITION_PROPS, {isPanning: true});\r\n    return true;\r\n  }\r\n\r\n  // Default handler for panning to rotate.\r\n  // Called by `_onPan` when panning with function key pressed.\r\n  _onPanRotate(event: MjolnirEvent) {\r\n    if (!this.dragRotate) {\r\n      return false;\r\n    }\r\n\r\n    const {deltaX, deltaY} = event;\r\n    const [, centerY] = this.getCenter(event);\r\n    const startY = centerY - deltaY;\r\n    const {width, height} = this.mapState.getViewportProps();\r\n\r\n    const deltaScaleX = deltaX / width;\r\n    let deltaScaleY = 0;\r\n\r\n    if (deltaY > 0) {\r\n      if (Math.abs(height - startY) > PITCH_MOUSE_THRESHOLD) {\r\n        // Move from 0 to -1 as we drag upwards\r\n        deltaScaleY = (deltaY / (startY - height)) * PITCH_ACCEL;\r\n      }\r\n    } else if (deltaY < 0) {\r\n      if (startY > PITCH_MOUSE_THRESHOLD) {\r\n        // Move from 0 to 1 as we drag upwards\r\n        deltaScaleY = 1 - centerY / startY;\r\n      }\r\n    }\r\n    deltaScaleY = Math.min(1, Math.max(-1, deltaScaleY));\r\n\r\n    const newMapState = this.mapState.rotate({deltaScaleX, deltaScaleY});\r\n    this.updateViewport(newMapState, NO_TRANSITION_PROPS, {isRotating: true});\r\n    return true;\r\n  }\r\n\r\n  // Default handler for the `wheel` event.\r\n  _onWheel(event: MjolnirEvent) {\r\n    if (!this.scrollZoom) {\r\n      return false;\r\n    }\r\n\r\n    event.preventDefault();\r\n\r\n    const pos = this.getCenter(event);\r\n    const {delta} = event;\r\n\r\n    // Map wheel delta to relative scale\r\n    let scale = 2 / (1 + Math.exp(-Math.abs(delta * ZOOM_ACCEL)));\r\n    if (delta < 0 && scale !== 0) {\r\n      scale = 1 / scale;\r\n    }\r\n\r\n    const newMapState = this.mapState.zoom({pos, scale});\r\n    this.updateViewport(newMapState, NO_TRANSITION_PROPS, {isZooming: true});\r\n    // Wheel events are discrete, let's wait a little before resetting isZooming\r\n    this._onWheelEnd();\r\n    return true;\r\n  }\r\n\r\n  _onWheelEnd() {\r\n    this.setState({isZooming: false});\r\n  }\r\n\r\n  // Default handler for the `pinchstart` event.\r\n  _onPinchStart(event: MjolnirEvent) {\r\n    const pos = this.getCenter(event);\r\n    const newMapState = this.mapState.zoomStart({pos}).rotateStart({pos});\r\n    // hack - hammer's `rotation` field doesn't seem to produce the correct angle\r\n    this._state.startPinchRotation = event.rotation;\r\n    this.updateViewport(newMapState, NO_TRANSITION_PROPS, {isDragging: true});\r\n    return true;\r\n  }\r\n\r\n  // Default handler for the `pinch` event.\r\n  _onPinch(event: MjolnirEvent) {\r\n    if (!this.touchZoom && !this.touchRotate) {\r\n      return false;\r\n    }\r\n\r\n    let newMapState = this.mapState;\r\n    if (this.touchZoom) {\r\n      const {scale} = event;\r\n      const pos = this.getCenter(event);\r\n      newMapState = newMapState.zoom({pos, scale});\r\n    }\r\n    if (this.touchRotate) {\r\n      const {rotation} = event;\r\n      const {startPinchRotation} = this._state;\r\n      newMapState = newMapState.rotate({\r\n        deltaScaleX: -(rotation - startPinchRotation) / 180\r\n      });\r\n    }\r\n\r\n    this.updateViewport(newMapState, NO_TRANSITION_PROPS, {\r\n      isDragging: true,\r\n      isPanning: this.touchZoom,\r\n      isZooming: this.touchZoom,\r\n      isRotating: this.touchRotate\r\n    });\r\n    return true;\r\n  }\r\n\r\n  // Default handler for the `pinchend` event.\r\n  _onPinchEnd(event: MjolnirEvent) {\r\n    const newMapState = this.mapState.zoomEnd().rotateEnd();\r\n    this._state.startPinchRotation = 0;\r\n    this.updateViewport(newMapState, null, {\r\n      isDragging: false,\r\n      isPanning: false,\r\n      isZooming: false,\r\n      isRotating: false\r\n    });\r\n    return true;\r\n  }\r\n\r\n  // Default handler for the `doubletap` event.\r\n  _onDoubleTap(event: MjolnirEvent) {\r\n    if (!this.doubleClickZoom) {\r\n      return false;\r\n    }\r\n    const pos = this.getCenter(event);\r\n    const isZoomOut = this.isFunctionKeyPressed(event);\r\n\r\n    const newMapState = this.mapState.zoom({pos, scale: isZoomOut ? 0.5 : 2});\r\n    this.updateViewport(\r\n      newMapState,\r\n      Object.assign({}, LINEAR_TRANSITION_PROPS, {\r\n        transitionInterpolator: new LinearInterpolator({around: pos})\r\n      })\r\n    );\r\n    return true;\r\n  }\r\n\r\n  /* eslint-disable complexity */\r\n  // Default handler for the `keydown` event\r\n  _onKeyDown(event: MjolnirEvent) {\r\n    if (!this.keyboard) {\r\n      return false;\r\n    }\r\n    const funcKey = this.isFunctionKeyPressed(event);\r\n    const {mapStateProps} = this;\r\n    let newMapState;\r\n\r\n    switch (event.srcEvent.keyCode) {\r\n      case 189: // -\r\n        if (funcKey) {\r\n          newMapState = this.getMapState({zoom: mapStateProps.zoom - 2});\r\n        } else {\r\n          newMapState = this.getMapState({zoom: mapStateProps.zoom - 1});\r\n        }\r\n        break;\r\n      case 187: // +\r\n        if (funcKey) {\r\n          newMapState = this.getMapState({zoom: mapStateProps.zoom + 2});\r\n        } else {\r\n          newMapState = this.getMapState({zoom: mapStateProps.zoom + 1});\r\n        }\r\n        break;\r\n      case 37: // left\r\n        if (funcKey) {\r\n          newMapState = this.getMapState({\r\n            bearing: mapStateProps.bearing - 15\r\n          });\r\n        } else {\r\n          newMapState = this.mapState.pan({pos: [100, 0], startPos: [0, 0]});\r\n        }\r\n        break;\r\n      case 39: // right\r\n        if (funcKey) {\r\n          newMapState = this.getMapState({\r\n            bearing: mapStateProps.bearing + 15\r\n          });\r\n        } else {\r\n          newMapState = this.mapState.pan({pos: [-100, 0], startPos: [0, 0]});\r\n        }\r\n        break;\r\n      case 38: // up\r\n        if (funcKey) {\r\n          newMapState = this.getMapState({pitch: mapStateProps.pitch + 10});\r\n        } else {\r\n          newMapState = this.mapState.pan({pos: [0, 100], startPos: [0, 0]});\r\n        }\r\n        break;\r\n      case 40: // down\r\n        if (funcKey) {\r\n          newMapState = this.getMapState({pitch: mapStateProps.pitch - 10});\r\n        } else {\r\n          newMapState = this.mapState.pan({pos: [0, -100], startPos: [0, 0]});\r\n        }\r\n        break;\r\n      default:\r\n        return false;\r\n    }\r\n    return this.updateViewport(newMapState, LINEAR_TRANSITION_PROPS);\r\n  }\r\n  /* eslint-enable complexity */\r\n}\r\n","/* global setTimeout, clearTimeout */\r\n/* eslint-disable consistent-this, func-names */\r\nexport default function debounce(func, delay) {\r\n  let _this;\r\n  let _arguments;\r\n  let timeout;\r\n\r\n  const executeNow = () => {\r\n    timeout = null;\r\n    return func.apply(_this, _arguments);\r\n  };\r\n\r\n  return function() {\r\n    _this = this;\r\n    _arguments = arguments;\r\n\r\n    if (timeout) {\r\n      clearTimeout(timeout);\r\n    }\r\n    timeout = setTimeout(executeNow, delay);\r\n  };\r\n}\r\n","// @flow\r\n\r\n// 'new' is optional\r\nconst DEPRECATED_PROPS = [\r\n  {old: 'onChangeViewport', new: 'onViewportChange'},\r\n  {old: 'perspectiveEnabled', new: 'dragRotate'},\r\n  {old: 'onHoverFeatures', new: 'onHover'},\r\n  {old: 'onClickFeatures', new: 'onClick'},\r\n  {old: 'touchZoomRotate', new: 'touchZoom, touchRotate'},\r\n  {old: 'mapControls', new: 'controller'}\r\n];\r\n\r\nfunction getDeprecatedText(name: string): string {\r\n  return `react-map-gl: \\`${name}\\` is removed.`;\r\n}\r\n\r\nfunction getNewText(name: string): string {\r\n  return `Use \\`${name}\\` instead.`;\r\n}\r\n\r\n/**\r\n * Checks props object for any prop that is deprecated and insert a console\r\n * warning to the user. This will also print out the recommended new prop/API\r\n * if one exists.\r\n */\r\nexport default function checkDeprecatedProps(props: any = {}) {\r\n  /* eslint-disable no-console, no-undef */\r\n  DEPRECATED_PROPS.forEach(depProp => {\r\n    if (props.hasOwnProperty(depProp.old)) {\r\n      let warnMessage = getDeprecatedText(depProp.old);\r\n      if (depProp.new) {\r\n        warnMessage = `${warnMessage} ${getNewText(depProp.new)}`;\r\n      }\r\n      console.warn(warnMessage);\r\n    }\r\n  });\r\n}\r\n","// @flow\r\nimport React, {PureComponent, createRef} from 'react';\r\nimport PropTypes from 'prop-types';\r\n\r\nimport StaticMap from './static-map';\r\nimport {MAPBOX_LIMITS} from '../utils/map-state';\r\nimport WebMercatorViewport from 'viewport-mercator-project';\r\n\r\nimport TransitionManager from '../utils/transition-manager';\r\nimport MapContext from './map-context';\r\n\r\nimport {EventManager} from 'mjolnir.js';\r\nimport MapController from '../utils/map-controller';\r\nimport deprecateWarn from '../utils/deprecate-warn';\r\n\r\nimport type {ViewState} from '../mapbox/mapbox';\r\nimport type {StaticMapProps} from './static-map';\r\nimport type {MjolnirEvent} from 'mjolnir.js';\r\nimport type {MapContextProps} from './map-context';\r\n\r\nconst propTypes = Object.assign({}, StaticMap.propTypes, {\r\n  // Additional props on top of StaticMap\r\n\r\n  /** Viewport constraints */\r\n  // Max zoom level\r\n  maxZoom: PropTypes.number,\r\n  // Min zoom level\r\n  minZoom: PropTypes.number,\r\n  // Max pitch in degrees\r\n  maxPitch: PropTypes.number,\r\n  // Min pitch in degrees\r\n  minPitch: PropTypes.number,\r\n\r\n  // Callbacks fired when the user interacted with the map. The object passed to the callbacks\r\n  // contains viewport properties such as `longitude`, `latitude`, `zoom` etc.\r\n  onViewStateChange: PropTypes.func,\r\n  onViewportChange: PropTypes.func,\r\n  onInteractionStateChange: PropTypes.func,\r\n\r\n  /** Viewport transition **/\r\n  // transition duration for viewport change\r\n  transitionDuration: PropTypes.oneOfType([PropTypes.number, PropTypes.string]),\r\n  // TransitionInterpolator instance, can be used to perform custom transitions.\r\n  transitionInterpolator: PropTypes.object,\r\n  // type of interruption of current transition on update.\r\n  transitionInterruption: PropTypes.number,\r\n  // easing function\r\n  transitionEasing: PropTypes.func,\r\n  // transition status update functions\r\n  onTransitionStart: PropTypes.func,\r\n  onTransitionInterrupt: PropTypes.func,\r\n  onTransitionEnd: PropTypes.func,\r\n\r\n  /** Enables control event handling */\r\n  // Scroll to zoom\r\n  scrollZoom: PropTypes.bool,\r\n  // Drag to pan\r\n  dragPan: PropTypes.bool,\r\n  // Drag to rotate\r\n  dragRotate: PropTypes.bool,\r\n  // Double click to zoom\r\n  doubleClickZoom: PropTypes.bool,\r\n  // Multitouch zoom\r\n  touchZoom: PropTypes.bool,\r\n  // Multitouch rotate\r\n  touchRotate: PropTypes.bool,\r\n  // Keyboard\r\n  keyboard: PropTypes.bool,\r\n\r\n  /** Event callbacks */\r\n  onHover: PropTypes.func,\r\n  onClick: PropTypes.func,\r\n  onDblClick: PropTypes.func,\r\n  onContextMenu: PropTypes.func,\r\n  onMouseDown: PropTypes.func,\r\n  onMouseMove: PropTypes.func,\r\n  onMouseUp: PropTypes.func,\r\n  onTouchStart: PropTypes.func,\r\n  onTouchMove: PropTypes.func,\r\n  onTouchEnd: PropTypes.func,\r\n  onMouseEnter: PropTypes.func,\r\n  onMouseLeave: PropTypes.func,\r\n  onMouseOut: PropTypes.func,\r\n  onWheel: PropTypes.func,\r\n\r\n  /** Custom touch-action CSS for the event canvas. Defaults to 'none' */\r\n  touchAction: PropTypes.string,\r\n\r\n  /** Radius to detect features around a clicked point. Defaults to 0. */\r\n  clickRadius: PropTypes.number,\r\n\r\n  /** List of layers that are interactive */\r\n  interactiveLayerIds: PropTypes.array,\r\n\r\n  /** Accessor that returns a cursor style to show interactive state */\r\n  getCursor: PropTypes.func,\r\n\r\n  // A map control instance to replace the default map controller\r\n  // The object must expose a method: `setOptions(opts)`\r\n  controller: PropTypes.instanceOf(MapController)\r\n});\r\n\r\ntype State = {\r\n  isLoaded: boolean,\r\n  isDragging: boolean,\r\n  isHovering: boolean\r\n};\r\n\r\nconst getDefaultCursor = ({isDragging, isHovering}: State) =>\r\n  isDragging ? 'grabbing' : isHovering ? 'pointer' : 'grab';\r\n\r\nconst defaultProps = Object.assign(\r\n  {},\r\n  StaticMap.defaultProps,\r\n  MAPBOX_LIMITS,\r\n  TransitionManager.defaultProps,\r\n  {\r\n    onViewStateChange: null,\r\n    onViewportChange: null,\r\n    onClick: null,\r\n    onNativeClick: null,\r\n    onHover: null,\r\n    onContextMenu: (event: MouseEvent) => event.preventDefault(),\r\n\r\n    scrollZoom: true,\r\n    dragPan: true,\r\n    dragRotate: true,\r\n    doubleClickZoom: true,\r\n    touchZoom: true,\r\n    touchRotate: false,\r\n    keyboard: true,\r\n\r\n    touchAction: 'none',\r\n    clickRadius: 0,\r\n    getCursor: getDefaultCursor\r\n  }\r\n);\r\n\r\ntype InteractionState = {\r\n  isDragging: boolean\r\n};\r\n\r\ntype MapEvent = MjolnirEvent & {\r\n  point: Array<number>,\r\n  lngLat: Array<number>,\r\n  features: ?Array<any>\r\n};\r\n\r\nexport type InteractiveMapProps = StaticMapProps & {\r\n  onViewStateChange: Function,\r\n  onViewportChange: Function,\r\n  onInteractionStateChange: Function,\r\n  onHover: Function,\r\n  onClick: Function,\r\n  onNativeClick: Function,\r\n  onDblClick: Function,\r\n  onContextMenu: Function,\r\n  onMouseDown: Function,\r\n  onMouseMove: Function,\r\n  onMouseUp: Function,\r\n  onTouchStart: Function,\r\n  onTouchMove: Function,\r\n  onTouchEnd: Function,\r\n  onMouseEnter: Function,\r\n  onMouseLeave: Function,\r\n  onMouseOut: Function,\r\n  onWheel: Function,\r\n\r\n  transitionDuration: number,\r\n  transitionInterpolator: any,\r\n  transitionInterruption: number,\r\n  transitionEasing: Function,\r\n\r\n  scrollZoom: boolean,\r\n  dragPan: boolean,\r\n  dragRotate: boolean,\r\n  doubleClickZoom: boolean,\r\n  touchZoom: boolean,\r\n  touchRotate: boolean,\r\n  keyboard: boolean,\r\n\r\n  touchAction: string,\r\n  clickRadius: number,\r\n  interactiveLayerIds: Array<string>,\r\n  getCursor: Function,\r\n  controller: MapController\r\n};\r\n\r\nexport default class InteractiveMap extends PureComponent<InteractiveMapProps, State> {\r\n  static supported() {\r\n    return StaticMap.supported();\r\n  }\r\n\r\n  static propTypes = propTypes;\r\n  static defaultProps = defaultProps;\r\n\r\n  constructor(props: InteractiveMapProps) {\r\n    super(props);\r\n    // Check for deprecated props\r\n    deprecateWarn(props);\r\n\r\n    // If props.controller is not provided, fallback to default MapController instance\r\n    // Cannot use defaultProps here because it needs to be per map instance\r\n    this._controller = props.controller || new MapController();\r\n\r\n    this._eventManager = new EventManager(null, {\r\n      touchAction: props.touchAction\r\n    });\r\n\r\n    this._updateInteractiveContext({\r\n      isDragging: false,\r\n      eventManager: this._eventManager\r\n    });\r\n  }\r\n\r\n  state: State = {\r\n    // Whether mapbox styles have finished loading\r\n    isLoaded: false,\r\n    // Whether the cursor is down\r\n    isDragging: false,\r\n    // Whether the cursor is over a clickable feature\r\n    isHovering: false\r\n  };\r\n\r\n  componentDidMount() {\r\n    const eventManager = this._eventManager;\r\n\r\n    const mapContainer = this._eventCanvasRef.current;\r\n    eventManager.setElement(mapContainer);\r\n    // Register additional event handlers for click and hover\r\n    eventManager.on({\r\n      pointerdown: this._onPointerDown,\r\n      pointermove: this._onPointerMove,\r\n      pointerup: this._onPointerUp,\r\n      pointerleave: this._onEvent.bind(this, 'onMouseOut'),\r\n      click: this._onClick,\r\n      anyclick: this._onClick,\r\n      dblclick: this._onEvent.bind(this, 'onDblClick'),\r\n      wheel: this._onEvent.bind(this, 'onWheel'),\r\n      contextmenu: this._onEvent.bind(this, 'onContextMenu')\r\n    });\r\n\r\n    this._setControllerProps(this.props);\r\n\r\n    this._updateInteractiveContext({mapContainer});\r\n  }\r\n\r\n  componentDidUpdate() {\r\n    this._setControllerProps(this.props);\r\n  }\r\n\r\n  componentWillUnmount() {\r\n    this._eventManager.destroy();\r\n  }\r\n\r\n  _controller: MapController;\r\n  _eventManager: any;\r\n  _interactiveContext: MapContextProps;\r\n  _width: number = 0;\r\n  _height: number = 0;\r\n  _eventCanvasRef: {current: null | HTMLDivElement} = createRef();\r\n  _staticMapRef: {current: null | StaticMap} = createRef();\r\n\r\n  getMap = () => {\r\n    return this._staticMapRef.current ? this._staticMapRef.current.getMap() : null;\r\n  };\r\n\r\n  queryRenderedFeatures = (geometry: any, options: any = {}) => {\r\n    const map = this.getMap();\r\n    return map && map.queryRenderedFeatures(geometry, options);\r\n  };\r\n\r\n  _setControllerProps(props: InteractiveMapProps) {\r\n    props = Object.assign({}, props, props.viewState, {\r\n      isInteractive: Boolean(props.onViewStateChange || props.onViewportChange),\r\n      onViewportChange: this._onViewportChange,\r\n      onStateChange: this._onInteractionStateChange,\r\n      eventManager: this._eventManager,\r\n      width: this._width,\r\n      height: this._height\r\n    });\r\n\r\n    this._controller.setOptions(props);\r\n\r\n    // Pass callbacks via MapContext\r\n    // Do not create a new context object because these do not affect render\r\n    const context = this._interactiveContext;\r\n    context.onViewportChange = props.onViewportChange;\r\n    context.onViewStateChange = props.onViewStateChange;\r\n  }\r\n\r\n  _getFeatures({pos, radius}: {pos: Array<number>, radius: number}) {\r\n    let features;\r\n    const queryParams = {};\r\n    const map = this.getMap();\r\n\r\n    if (this.props.interactiveLayerIds) {\r\n      queryParams.layers = this.props.interactiveLayerIds;\r\n    }\r\n\r\n    if (radius) {\r\n      // Radius enables point features, like marker symbols, to be clicked.\r\n      const size = radius;\r\n      const bbox = [[pos[0] - size, pos[1] + size], [pos[0] + size, pos[1] - size]];\r\n      features = map && map.queryRenderedFeatures(bbox, queryParams);\r\n    } else {\r\n      features = map && map.queryRenderedFeatures(pos, queryParams);\r\n    }\r\n    return features;\r\n  }\r\n\r\n  _onInteractionStateChange = (interactionState: InteractionState) => {\r\n    const {isDragging = false} = interactionState;\r\n    if (isDragging !== this.state.isDragging) {\r\n      this._updateInteractiveContext({isDragging});\r\n      this.setState({isDragging});\r\n    }\r\n\r\n    const {onInteractionStateChange} = this.props;\r\n    if (onInteractionStateChange) {\r\n      onInteractionStateChange(interactionState);\r\n    }\r\n  };\r\n\r\n  _updateInteractiveContext(updatedContext: $Shape<MapContextProps>) {\r\n    this._interactiveContext = Object.assign({}, this._interactiveContext, updatedContext);\r\n  }\r\n\r\n  _onResize = ({width, height}: {width: number, height: number}) => {\r\n    this._width = width;\r\n    this._height = height;\r\n    this._setControllerProps(this.props);\r\n    this.props.onResize({width, height});\r\n  };\r\n\r\n  _onViewportChange = (\r\n    viewState: ViewState,\r\n    interactionState: InteractionState,\r\n    oldViewState: ViewState\r\n  ) => {\r\n    const {onViewStateChange, onViewportChange} = this.props;\r\n\r\n    if (onViewStateChange) {\r\n      onViewStateChange({viewState, interactionState, oldViewState});\r\n    }\r\n    if (onViewportChange) {\r\n      onViewportChange(viewState, interactionState, oldViewState);\r\n    }\r\n  };\r\n\r\n  /* Generic event handling */\r\n  _normalizeEvent(event: MapEvent) {\r\n    if (event.lngLat) {\r\n      // Already unprojected\r\n      return event;\r\n    }\r\n\r\n    const {\r\n      offsetCenter: {x, y}\r\n    } = event;\r\n    const pos = [x, y];\r\n\r\n    const viewport = new WebMercatorViewport(\r\n      // $FlowFixMe\r\n      Object.assign({}, this.props, {\r\n        width: this._width,\r\n        height: this._height\r\n      })\r\n    );\r\n\r\n    event.point = pos;\r\n    event.lngLat = viewport.unproject(pos);\r\n\r\n    return event;\r\n  }\r\n\r\n  _onLoad = (event: MapEvent) => {\r\n    this.setState({isLoaded: true});\r\n    this.props.onLoad(event);\r\n  };\r\n\r\n  _onEvent = (callbackName: string, event: MapEvent) => {\r\n    const func = this.props[callbackName];\r\n    if (func) {\r\n      func(this._normalizeEvent(event));\r\n    }\r\n  };\r\n\r\n  /* Special case event handling */\r\n  _onPointerDown = (event: MapEvent) => {\r\n    switch (event.pointerType) {\r\n      case 'touch':\r\n        this._onEvent('onTouchStart', event);\r\n        break;\r\n\r\n      default:\r\n        this._onEvent('onMouseDown', event);\r\n    }\r\n  };\r\n\r\n  _onPointerUp = (event: MapEvent) => {\r\n    switch (event.pointerType) {\r\n      case 'touch':\r\n        this._onEvent('onTouchEnd', event);\r\n        break;\r\n\r\n      default:\r\n        this._onEvent('onMouseUp', event);\r\n    }\r\n  };\r\n\r\n  // eslint-disable-next-line complexity\r\n  _onPointerMove = (event: MapEvent) => {\r\n    switch (event.pointerType) {\r\n      case 'touch':\r\n        this._onEvent('onTouchMove', event);\r\n        break;\r\n\r\n      default:\r\n        this._onEvent('onMouseMove', event);\r\n    }\r\n\r\n    if (!this.state.isDragging) {\r\n      const {onHover, interactiveLayerIds} = this.props;\r\n      let features;\r\n      event = this._normalizeEvent(event);\r\n      if (this.state.isLoaded && (interactiveLayerIds || onHover)) {\r\n        features = this._getFeatures({\r\n          pos: event.point,\r\n          radius: this.props.clickRadius\r\n        });\r\n      }\r\n      if (onHover) {\r\n        // backward compatibility: v3 `onHover` interface\r\n        event.features = features;\r\n        onHover(event);\r\n      }\r\n\r\n      const isHovering = Boolean(interactiveLayerIds && features && features.length > 0);\r\n      const isEntering = isHovering && !this.state.isHovering;\r\n      const isExiting = !isHovering && this.state.isHovering;\r\n\r\n      if (isEntering) {\r\n        this._onEvent('onMouseEnter', event);\r\n      }\r\n      if (isExiting) {\r\n        this._onEvent('onMouseLeave', event);\r\n      }\r\n      if (isEntering || isExiting) {\r\n        this.setState({isHovering});\r\n      }\r\n    }\r\n  };\r\n\r\n  _onClick = (event: MapEvent) => {\r\n    const {onClick, onNativeClick, onDblClick, doubleClickZoom} = this.props;\r\n    let callbacks = [];\r\n    const isDoubleClickEnabled = onDblClick || doubleClickZoom;\r\n\r\n    // `click` is only fired on single click. `anyclick` is fired twice if double clicking.\r\n    // `click` has a delay period after pointer up that prevents it from firing when\r\n    // double clicking. `anyclick` is always fired immediately after pointer up.\r\n    // If double click is turned off by the user, we want to immediately fire the\r\n    // onClick event. Otherwise, we wait to make sure it's a single click.\r\n    switch (event.type) {\r\n      case 'anyclick':\r\n        callbacks.push(onNativeClick);\r\n        if (!isDoubleClickEnabled) {\r\n          callbacks.push(onClick);\r\n        }\r\n        break;\r\n\r\n      case 'click':\r\n        if (isDoubleClickEnabled) {\r\n          callbacks.push(onClick);\r\n        }\r\n        break;\r\n\r\n      default:\r\n    }\r\n\r\n    callbacks = callbacks.filter(Boolean);\r\n\r\n    if (callbacks.length) {\r\n      event = this._normalizeEvent(event);\r\n      // backward compatibility: v3 `onClick` interface\r\n      event.features = this._getFeatures({\r\n        pos: event.point,\r\n        radius: this.props.clickRadius\r\n      });\r\n      callbacks.forEach(cb => cb(event));\r\n    }\r\n  };\r\n\r\n  render() {\r\n    const {width, height, style, getCursor} = this.props;\r\n\r\n    const eventCanvasStyle = Object.assign({position: 'relative'}, style, {\r\n      width,\r\n      height,\r\n      cursor: getCursor(this.state)\r\n    });\r\n\r\n    return (\r\n      <MapContext.Provider value={this._interactiveContext}>\r\n        <div key=\"event-canvas\" ref={this._eventCanvasRef} style={eventCanvasStyle}>\r\n          <StaticMap\r\n            {...this.props}\r\n            width=\"100%\"\r\n            height=\"100%\"\r\n            style={null}\r\n            onResize={this._onResize}\r\n            onLoad={this._onLoad}\r\n            ref={this._staticMapRef}\r\n          >\r\n            {this.props.children}\r\n          </StaticMap>\r\n        </div>\r\n      </MapContext.Provider>\r\n    );\r\n  }\r\n}\r\n","// @flow\r\n// Copyright (c) 2015 Uber Technologies, Inc.\r\n\r\n// Permission is hereby granted, free of charge, to any person obtaining a copy\r\n// of this software and associated documentation files (the \"Software\"), to deal\r\n// in the Software without restriction, including without limitation the rights\r\n// to use, copy, modify, merge, publish, distribute, sublicense, and/or sell\r\n// copies of the Software, and to permit persons to whom the Software is\r\n// furnished to do so, subject to the following conditions:\r\n\r\n// The above copyright notice and this permission notice shall be included in\r\n// all copies or substantial portions of the Software.\r\n\r\n// THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\r\n// IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\r\n// FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE\r\n// AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER\r\n// LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,\r\n// OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN\r\n// THE SOFTWARE.\r\nimport React, {PureComponent, cloneElement} from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport MapContext from './map-context';\r\nimport assert from '../utils/assert';\r\n\r\nimport type {MapContextProps} from './map-context';\r\n\r\nconst propTypes = {\r\n  type: PropTypes.string.isRequired,\r\n  id: PropTypes.string\r\n};\r\n\r\ntype SourceProps = {\r\n  id?: string,\r\n  type: string,\r\n  children?: any\r\n};\r\n\r\nlet sourceCounter = 0;\r\n\r\nexport default class Source<Props: SourceProps> extends PureComponent<Props> {\r\n  static propTypes = propTypes;\r\n\r\n  constructor(props: Props) {\r\n    super(props);\r\n    this.id = props.id || `jsx-source-${sourceCounter++}`;\r\n    this.type = props.type;\r\n  }\r\n\r\n  componentWillUnmount() {\r\n    /* global requestAnimationFrame */\r\n    // Do not remove source immediately because the\r\n    // dependent <Layer>s' componentWillUnmount() might not have been called\r\n    // Removing source before dependent layers will throw error\r\n    // TODO - find a more robust solution\r\n    const map = this._map;\r\n    if (map) {\r\n      map.off('styledata', this._updateSource);\r\n      if (map.style) {\r\n        requestAnimationFrame(() => map.removeSource(this.id));\r\n      }\r\n    }\r\n  }\r\n\r\n  id: string;\r\n  type: string;\r\n  _map: any = null;\r\n  _sourceOptions: any = {};\r\n\r\n  getSource() {\r\n    const map = this._map;\r\n    return map && map.style && map.getSource(this.id);\r\n  }\r\n\r\n  _createSource(sourceOptions: any) {\r\n    const map = this._map;\r\n    if (map.style && map.style._loaded) {\r\n      map.addSource(this.id, sourceOptions);\r\n    }\r\n  }\r\n\r\n  /* eslint-disable complexity */\r\n  _updateSource = () => {\r\n    const {type, _map: map} = this;\r\n    if (!map) {\r\n      return;\r\n    }\r\n\r\n    const {_sourceOptions: sourceOptions, props} = this;\r\n    assert(!props.id || props.id === this.id, 'source id changed');\r\n    assert(props.type === type, 'source type changed');\r\n\r\n    let changedKey = null;\r\n    let changedKeyCount = 0;\r\n\r\n    for (const key in props) {\r\n      if (key !== 'children' && key !== 'id' && sourceOptions[key] !== props[key]) {\r\n        sourceOptions[key] = props[key];\r\n        changedKey = key;\r\n        changedKeyCount++;\r\n      }\r\n    }\r\n\r\n    const source = this.getSource();\r\n    if (!source) {\r\n      this._createSource(sourceOptions);\r\n      return;\r\n    }\r\n    if (!changedKeyCount) {\r\n      return;\r\n    }\r\n    if (type === 'geojson') {\r\n      source.setData(sourceOptions.data);\r\n    } else if (type === 'image') {\r\n      source.updateImage({url: sourceOptions.url, coordinates: sourceOptions.coordinates});\r\n    } else if (\r\n      (type === 'canvas' || type === 'video') &&\r\n      changedKeyCount === 1 &&\r\n      changedKey === 'coordinates'\r\n    ) {\r\n      source.setCoordinates(sourceOptions.coordinates);\r\n    } else {\r\n      map.removeSource(this.id);\r\n      map.addSource(this.id, sourceOptions);\r\n    }\r\n  };\r\n  /* eslint-enable complexity */\r\n\r\n  _render(context: MapContextProps) {\r\n    if (!this._map) {\r\n      this._map = context.map;\r\n      this._map.on('styledata', this._updateSource);\r\n    }\r\n    this._updateSource();\r\n    return React.Children.map(this.props.children, child =>\r\n      cloneElement(child, {\r\n        source: this.id\r\n      })\r\n    );\r\n  }\r\n\r\n  render() {\r\n    return <MapContext.Consumer>{this._render.bind(this)}</MapContext.Consumer>;\r\n  }\r\n}\r\n","// @flow\r\n\r\n/* eslint-disable complexity */\r\nexport default function deepEqual(a: ?mixed, b: ?mixed): boolean {\r\n  if (a === b) {\r\n    return true;\r\n  }\r\n  if (!a || !b) {\r\n    return false;\r\n  }\r\n  if (Array.isArray(a)) {\r\n    if (!Array.isArray(b) || a.length !== b.length) {\r\n      return false;\r\n    }\r\n    for (let i = 0; i < a.length; i++) {\r\n      if (!deepEqual(a[i], b[i])) {\r\n        return false;\r\n      }\r\n    }\r\n    return true;\r\n  } else if (Array.isArray(b)) {\r\n    return false;\r\n  }\r\n  if (typeof a === 'object' && typeof b === 'object') {\r\n    const aKeys = Object.keys(a);\r\n    const bKeys = Object.keys(b);\r\n    if (aKeys.length !== bKeys.length) {\r\n      return false;\r\n    }\r\n    for (const key of aKeys) {\r\n      if (!b.hasOwnProperty(key)) {\r\n        return false;\r\n      }\r\n      if (!deepEqual(a[key], b[key])) {\r\n        return false;\r\n      }\r\n    }\r\n    return true;\r\n  }\r\n  return false;\r\n}\r\n","// @flow\r\n// Copyright (c) 2015 Uber Technologies, Inc.\r\n\r\n// Permission is hereby granted, free of charge, to any person obtaining a copy\r\n// of this software and associated documentation files (the \"Software\"), to deal\r\n// in the Software without restriction, including without limitation the rights\r\n// to use, copy, modify, merge, publish, distribute, sublicense, and/or sell\r\n// copies of the Software, and to permit persons to whom the Software is\r\n// furnished to do so, subject to the following conditions:\r\n\r\n// The above copyright notice and this permission notice shall be included in\r\n// all copies or substantial portions of the Software.\r\n\r\n// THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\r\n// IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\r\n// FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE\r\n// AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER\r\n// LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,\r\n// OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN\r\n// THE SOFTWARE.\r\nimport React, {PureComponent} from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport MapContext from './map-context';\r\nimport assert from '../utils/assert';\r\nimport deepEqual from '../utils/deep-equal';\r\n\r\nimport type {MapContextProps} from './map-context';\r\n\r\nconst propTypes = {\r\n  type: PropTypes.string.isRequired,\r\n  id: PropTypes.string,\r\n  source: PropTypes.string,\r\n  beforeId: PropTypes.string\r\n};\r\n\r\ntype LayerProps = {\r\n  id?: string,\r\n  type: string,\r\n  source?: string,\r\n  beforeId?: string,\r\n  layout: any,\r\n  paint: any,\r\n  filter?: Array<mixed>,\r\n  minzoom?: number,\r\n  maxzoom?: number\r\n};\r\n\r\n/* eslint-disable complexity */\r\nfunction diffLayerStyles(map: any, id: string, props: LayerProps, prevProps: LayerProps) {\r\n  const {layout = {}, paint = {}, filter, minzoom, maxzoom, beforeId, ...otherProps} = props;\r\n\r\n  if (beforeId !== prevProps.beforeId) {\r\n    map.moveLayer(id, beforeId);\r\n  }\r\n  if (layout !== prevProps.layout) {\r\n    for (const key in layout) {\r\n      if (!deepEqual(layout[key], prevProps.layout[key])) {\r\n        map.setLayoutProperty(id, key, layout[key]);\r\n      }\r\n    }\r\n  }\r\n  if (paint !== prevProps.paint) {\r\n    for (const key in paint) {\r\n      if (!deepEqual(paint[key], prevProps.paint[key])) {\r\n        map.setPaintProperty(id, key, paint[key]);\r\n      }\r\n    }\r\n  }\r\n  if (!deepEqual(filter, prevProps.filter)) {\r\n    map.setFilter(id, filter);\r\n  }\r\n  if (minzoom !== prevProps.minzoom || maxzoom !== prevProps.maxzoom) {\r\n    map.setLayerZoomRange(id, minzoom, maxzoom);\r\n  }\r\n  for (const key in otherProps) {\r\n    if (!deepEqual(otherProps[key], prevProps[key])) {\r\n      map.setLayerProperty(id, key, otherProps[key]);\r\n    }\r\n  }\r\n}\r\n/* eslint-enable complexity */\r\n\r\nlet layerCounter = 0;\r\n\r\nexport default class Layer<Props: LayerProps> extends PureComponent<Props> {\r\n  static propTypes = propTypes;\r\n\r\n  constructor(props: Props) {\r\n    super(props);\r\n    this.id = props.id || `jsx-layer-${layerCounter++}`;\r\n    this.type = props.type;\r\n  }\r\n\r\n  componentDidMount() {\r\n    this._updateLayer();\r\n  }\r\n\r\n  componentDidUpdate() {\r\n    this._updateLayer();\r\n  }\r\n\r\n  componentWillUnmount() {\r\n    const map = this._map;\r\n    if (map) {\r\n      map.off('styledata', this._updateLayer);\r\n      if (map.style) {\r\n        map.removeLayer(this.id);\r\n      }\r\n    }\r\n  }\r\n\r\n  id: string;\r\n  type: string;\r\n  _map: any = null;\r\n  _layerOptions: any = {};\r\n\r\n  getLayer() {\r\n    const map = this._map;\r\n    return map && map.style && map.getLayer(this.id);\r\n  }\r\n\r\n  _createLayer() {\r\n    const map = this._map;\r\n\r\n    if (map.style && map.style._loaded) {\r\n      const options = Object.assign({}, this.props);\r\n      options.id = this.id;\r\n      delete options.beforeId;\r\n\r\n      map.addLayer(options, this.props.beforeId);\r\n      this._layerOptions = options;\r\n    }\r\n  }\r\n\r\n  /* eslint-disable complexity */\r\n  _updateLayer = () => {\r\n    const map = this._map;\r\n    if (!map) {\r\n      return;\r\n    }\r\n\r\n    const {props, _layerOptions: layerOptions} = this;\r\n    assert(!props.id || props.id === this.id, 'layer id changed');\r\n    assert(props.type === this.type, 'layer type changed');\r\n\r\n    if (!this.getLayer()) {\r\n      this._createLayer();\r\n      return;\r\n    }\r\n\r\n    try {\r\n      diffLayerStyles(map, this.id, props, layerOptions);\r\n      Object.assign(layerOptions, props);\r\n    } catch (error) {\r\n      console.warn(error); // eslint-disable-line\r\n    }\r\n  };\r\n  /* eslint-disable complexity */\r\n\r\n  _render(context: MapContextProps) {\r\n    if (!this._map) {\r\n      this._map = context.map;\r\n      this._map.on('styledata', this._updateLayer);\r\n    }\r\n    return null;\r\n  }\r\n\r\n  render() {\r\n    return <MapContext.Consumer>{this._render.bind(this)}</MapContext.Consumer>;\r\n  }\r\n}\r\n","// @flow\r\n// Copyright (c) 2015 Uber Technologies, Inc.\r\n\r\n// Permission is hereby granted, free of charge, to any person obtaining a copy\r\n// of this software and associated documentation files (the \"Software\"), to deal\r\n// in the Software without restriction, including without limitation the rights\r\n// to use, copy, modify, merge, publish, distribute, sublicense, and/or sell\r\n// copies of the Software, and to permit persons to whom the Software is\r\n// furnished to do so, subject to the following conditions:\r\n\r\n// The above copyright notice and this permission notice shall be included in\r\n// all copies or substantial portions of the Software.\r\n\r\n// THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\r\n// IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\r\n// FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE\r\n// AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER\r\n// LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,\r\n// OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN\r\n// THE SOFTWARE.\r\nimport React, {PureComponent, createRef} from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport MapContext from './map-context';\r\n\r\nimport type {MjolnirEvent} from 'mjolnir.js';\r\n\r\nconst propTypes = {\r\n  /** Event handling */\r\n  captureScroll: PropTypes.bool,\r\n  // Stop map pan & rotate\r\n  captureDrag: PropTypes.bool,\r\n  // Stop map click\r\n  captureClick: PropTypes.bool,\r\n  // Stop map double click\r\n  captureDoubleClick: PropTypes.bool\r\n};\r\n\r\nconst defaultProps = {\r\n  captureScroll: false,\r\n  captureDrag: true,\r\n  captureClick: true,\r\n  captureDoubleClick: true\r\n};\r\n\r\nexport type BaseControlProps = {\r\n  captureScroll: boolean,\r\n  captureDrag: boolean,\r\n  captureClick: boolean,\r\n  captureDoubleClick: boolean,\r\n  children?: any\r\n};\r\n\r\n/*\r\n * PureComponent doesn't update when context changes.\r\n * The only way is to implement our own shouldComponentUpdate here. Considering\r\n * the parent component (StaticMap or InteractiveMap) is pure, and map re-render\r\n * is almost always triggered by a viewport change, we almost definitely need to\r\n * recalculate the marker's position when the parent re-renders.\r\n */\r\nexport default class BaseControl<\r\n  Props: BaseControlProps,\r\n  State: any,\r\n  ContainerType: Element\r\n> extends PureComponent<Props, State> {\r\n  static propTypes = propTypes;\r\n  static defaultProps = defaultProps;\r\n\r\n  componentDidMount() {\r\n    const ref = this._containerRef.current;\r\n    if (!ref) {\r\n      return;\r\n    }\r\n\r\n    const {eventManager} = this._context;\r\n\r\n    // Return early if no eventManager is found\r\n    if (eventManager) {\r\n      this._events = {\r\n        wheel: this._onScroll,\r\n        panstart: this._onDragStart,\r\n        anyclick: this._onClick,\r\n        click: this._onClick,\r\n        dblclick: this._onDblClick\r\n      };\r\n      eventManager.on(this._events, ref);\r\n    }\r\n  }\r\n\r\n  componentWillUnmount() {\r\n    const {eventManager} = this._context;\r\n    if (eventManager && this._events) {\r\n      eventManager.off(this._events);\r\n    }\r\n  }\r\n\r\n  _context: any = {};\r\n  _events: any = null;\r\n  _containerRef: {current: null | ContainerType} = createRef();\r\n\r\n  _onScroll = (evt: MjolnirEvent) => {\r\n    if (this.props.captureScroll) {\r\n      evt.stopPropagation();\r\n    }\r\n  };\r\n\r\n  _onDragStart = (evt: MjolnirEvent) => {\r\n    if (this.props.captureDrag) {\r\n      evt.stopPropagation();\r\n    }\r\n  };\r\n\r\n  _onDblClick = (evt: MjolnirEvent) => {\r\n    if (this.props.captureDoubleClick) {\r\n      evt.stopPropagation();\r\n    }\r\n  };\r\n\r\n  _onClick = (evt: MjolnirEvent) => {\r\n    if (this.props.captureClick) {\r\n      evt.stopPropagation();\r\n    }\r\n  };\r\n\r\n  _render() {\r\n    throw new Error('_render() not implemented');\r\n  }\r\n\r\n  render() {\r\n    return (\r\n      <MapContext.Consumer>\r\n        {context => {\r\n          this._context = context;\r\n          return this._render();\r\n        }}\r\n      </MapContext.Consumer>\r\n    );\r\n  }\r\n}\r\n","// @flow\r\n// Copyright (c) 2015 Uber Technologies, Inc.\r\n\r\n// Permission is hereby granted, free of charge, to any person obtaining a copy\r\n// of this software and associated documentation files (the \"Software\"), to deal\r\n// in the Software without restriction, including without limitation the rights\r\n// to use, copy, modify, merge, publish, distribute, sublicense, and/or sell\r\n// copies of the Software, and to permit persons to whom the Software is\r\n// furnished to do so, subject to the following conditions:\r\n\r\n// The above copyright notice and this permission notice shall be included in\r\n// all copies or substantial portions of the Software.\r\n\r\n// THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\r\n// IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\r\n// FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE\r\n// AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER\r\n// LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,\r\n// OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN\r\n// THE SOFTWARE.\r\nimport PropTypes from 'prop-types';\r\nimport BaseControl from './base-control';\r\n\r\nimport type {MjolnirEvent} from 'mjolnir.js';\r\nimport type {BaseControlProps} from './base-control';\r\n\r\nconst propTypes = Object.assign({}, BaseControl.propTypes, {\r\n  draggable: PropTypes.bool,\r\n  onDrag: PropTypes.func,\r\n  onDragEnd: PropTypes.func,\r\n  onDragStart: PropTypes.func,\r\n  // Offset from the left\r\n  offsetLeft: PropTypes.number,\r\n  // Offset from the top\r\n  offsetTop: PropTypes.number\r\n});\r\n\r\nconst defaultProps = Object.assign({}, BaseControl.defaultProps, {\r\n  draggable: false,\r\n  offsetLeft: 0,\r\n  offsetTop: 0\r\n});\r\n\r\ntype Coordinate = [number, number];\r\ntype Offset = [number, number];\r\ntype CallbackEvent = MjolnirEvent & {\r\n  lngLat: Coordinate\r\n};\r\n\r\nexport type DraggableControlProps = BaseControlProps & {\r\n  draggable: boolean,\r\n  onDrag?: CallbackEvent => any,\r\n  onDragEnd?: CallbackEvent => any,\r\n  onDragStart?: CallbackEvent => any,\r\n  offsetLeft: number,\r\n  offsetTop: number\r\n};\r\n\r\ntype State = {\r\n  dragPos: ?Coordinate,\r\n  dragOffset: ?Offset\r\n};\r\n\r\nexport default class DraggableControl<Props: DraggableControlProps> extends BaseControl<\r\n  Props,\r\n  State,\r\n  HTMLDivElement\r\n> {\r\n  static propTypes = propTypes;\r\n  static defaultProps = defaultProps;\r\n\r\n  state = {\r\n    dragPos: null,\r\n    dragOffset: null\r\n  };\r\n\r\n  _dragEvents: any = null;\r\n\r\n  componentWillUnmount() {\r\n    super.componentWillUnmount();\r\n    this._removeDragEvents();\r\n  }\r\n\r\n  _setupDragEvents() {\r\n    const {eventManager} = this._context;\r\n    if (!eventManager) {\r\n      return;\r\n    }\r\n\r\n    // panstart is already attached by parent class BaseControl,\r\n    // here we just add listeners for subsequent drag events\r\n    this._dragEvents = {\r\n      panmove: this._onDrag,\r\n      panend: this._onDragEnd,\r\n      pancancel: this._onDragCancel\r\n    };\r\n    eventManager.on(this._dragEvents);\r\n  }\r\n\r\n  _removeDragEvents() {\r\n    const {eventManager} = this._context;\r\n    if (!eventManager || !this._dragEvents) {\r\n      return;\r\n    }\r\n    eventManager.off(this._dragEvents);\r\n    this._dragEvents = null;\r\n  }\r\n\r\n  _getDragEventPosition(event: MjolnirEvent): Coordinate {\r\n    const {\r\n      offsetCenter: {x, y}\r\n    } = event;\r\n    return [x, y];\r\n  }\r\n\r\n  /**\r\n   * Returns offset of top-left of marker from drag start event\r\n   * (used for positioning marker relative to next mouse coordinates)\r\n   */\r\n  _getDragEventOffset(event: MjolnirEvent): ?Offset {\r\n    const {\r\n      center: {x, y}\r\n    } = event;\r\n    const container = this._containerRef.current;\r\n    if (container) {\r\n      const rect = container.getBoundingClientRect();\r\n      return [rect.left - x, rect.top - y];\r\n    }\r\n    return null;\r\n  }\r\n\r\n  _getDraggedPosition(dragPos: Coordinate, dragOffset: Offset): Coordinate {\r\n    return [dragPos[0] + dragOffset[0], dragPos[1] + dragOffset[1]];\r\n  }\r\n\r\n  _getDragLngLat(dragPos: Coordinate, dragOffset: Offset): Coordinate {\r\n    const {offsetLeft, offsetTop} = this.props;\r\n    const [x, y] = this._getDraggedPosition(dragPos, dragOffset);\r\n    // Unproject x/y value while respecting offset coordinates\r\n    return this._context.viewport.unproject([x - offsetLeft, y - offsetTop]);\r\n  }\r\n\r\n  _onDragStart = (event: MjolnirEvent) => {\r\n    const {draggable, captureDrag} = this.props;\r\n    if (draggable || captureDrag) {\r\n      event.stopPropagation();\r\n    }\r\n    if (!draggable) {\r\n      return;\r\n    }\r\n\r\n    const dragPos = this._getDragEventPosition(event);\r\n    const dragOffset = this._getDragEventOffset(event);\r\n    this.setState({dragPos, dragOffset});\r\n    this._setupDragEvents();\r\n\r\n    const {onDragStart} = this.props;\r\n    if (onDragStart && dragOffset) {\r\n      const callbackEvent: CallbackEvent = Object.assign({}, event);\r\n      callbackEvent.lngLat = this._getDragLngLat(dragPos, dragOffset);\r\n      onDragStart(callbackEvent);\r\n    }\r\n  };\r\n\r\n  _onDrag = (event: MjolnirEvent) => {\r\n    event.stopPropagation();\r\n\r\n    const dragPos = this._getDragEventPosition(event);\r\n    this.setState({dragPos});\r\n\r\n    const {onDrag} = this.props;\r\n    const {dragOffset} = this.state;\r\n    if (onDrag && dragOffset) {\r\n      const callbackEvent: CallbackEvent = Object.assign({}, event);\r\n      callbackEvent.lngLat = this._getDragLngLat(dragPos, dragOffset);\r\n      onDrag(callbackEvent);\r\n    }\r\n  };\r\n\r\n  _onDragEnd = (event: MjolnirEvent) => {\r\n    const {dragPos, dragOffset} = this.state;\r\n\r\n    event.stopPropagation();\r\n    this.setState({dragPos: null, dragOffset: null});\r\n    this._removeDragEvents();\r\n\r\n    const {onDragEnd} = this.props;\r\n    if (onDragEnd && dragPos && dragOffset) {\r\n      const callbackEvent: CallbackEvent = Object.assign({}, event);\r\n      callbackEvent.lngLat = this._getDragLngLat(dragPos, dragOffset);\r\n      onDragEnd(callbackEvent);\r\n    }\r\n  };\r\n\r\n  _onDragCancel = (event: MjolnirEvent) => {\r\n    event.stopPropagation();\r\n    this.setState({dragPos: null, dragOffset: null});\r\n    this._removeDragEvents();\r\n  };\r\n}\r\n","// @flow\r\n// Copyright (c) 2015 Uber Technologies, Inc.\r\n\r\n// Permission is hereby granted, free of charge, to any person obtaining a copy\r\n// of this software and associated documentation files (the \"Software\"), to deal\r\n// in the Software without restriction, including without limitation the rights\r\n// to use, copy, modify, merge, publish, distribute, sublicense, and/or sell\r\n// copies of the Software, and to permit persons to whom the Software is\r\n// furnished to do so, subject to the following conditions:\r\n\r\n// The above copyright notice and this permission notice shall be included in\r\n// all copies or substantial portions of the Software.\r\n\r\n// THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\r\n// IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\r\n// FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE\r\n// AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER\r\n// LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,\r\n// OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN\r\n// THE SOFTWARE.\r\nimport React from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport DraggableControl from './draggable-control';\r\n\r\nimport type {DraggableControlProps} from './draggable-control';\r\n\r\nconst propTypes = Object.assign({}, DraggableControl.propTypes, {\r\n  // Custom className\r\n  className: PropTypes.string,\r\n  // Longitude of the anchor point\r\n  longitude: PropTypes.number.isRequired,\r\n  // Latitude of the anchor point\r\n  latitude: PropTypes.number.isRequired\r\n});\r\n\r\nconst defaultProps = Object.assign({}, DraggableControl.defaultProps, {\r\n  className: ''\r\n});\r\n\r\nexport type MarkerProps = DraggableControlProps & {\r\n  className: string,\r\n  longitude: number,\r\n  latitude: number\r\n};\r\n\r\n/*\r\n * PureComponent doesn't update when context changes.\r\n * The only way is to implement our own shouldComponentUpdate here. Considering\r\n * the parent component (StaticMap or InteractiveMap) is pure, and map re-render\r\n * is almost always triggered by a viewport change, we almost definitely need to\r\n * recalculate the marker's position when the parent re-renders.\r\n */\r\nexport default class Marker extends DraggableControl<MarkerProps> {\r\n  static propTypes = propTypes;\r\n  static defaultProps = defaultProps;\r\n\r\n  _control: any = null;\r\n\r\n  _getPosition(): [number, number] {\r\n    const {longitude, latitude, offsetLeft, offsetTop} = this.props;\r\n    const {dragPos, dragOffset} = this.state;\r\n\r\n    // If dragging, just return the current drag position\r\n    if (dragPos && dragOffset) {\r\n      return this._getDraggedPosition(dragPos, dragOffset);\r\n    }\r\n\r\n    // Otherwise return the projected lat/lng with offset\r\n    let [x, y] = this._context.viewport.project([longitude, latitude]);\r\n    x += offsetLeft;\r\n    y += offsetTop;\r\n    return [x, y];\r\n  }\r\n\r\n  _render() {\r\n    const [x, y] = this._getPosition();\r\n    const transform = `translate(${x}px, ${y}px)`;\r\n    const div = this._containerRef.current;\r\n\r\n    if (this._control && div) {\r\n      // Perf: avoid rerendering if only the viewport changed\r\n      div.style.transform = transform;\r\n    } else {\r\n      const {className, draggable} = this.props;\r\n      const {dragPos} = this.state;\r\n\r\n      const containerStyle = {\r\n        position: 'absolute',\r\n        left: 0,\r\n        top: 0,\r\n        transform,\r\n        cursor: draggable ? (dragPos ? 'grabbing' : 'grab') : 'auto'\r\n      };\r\n\r\n      this._control = (\r\n        <div\r\n          className={`mapboxgl-marker ${className}`}\r\n          ref={this._containerRef}\r\n          style={containerStyle}\r\n        >\r\n          {this.props.children}\r\n        </div>\r\n      );\r\n    }\r\n    return this._control;\r\n  }\r\n\r\n  render() {\r\n    // invalidate cached element\r\n    this._control = null;\r\n    return super.render();\r\n  }\r\n}\r\n","// @flow\r\n\r\nexport const ANCHOR_POSITION = {\r\n  top: {x: 0.5, y: 0},\r\n  'top-left': {x: 0, y: 0},\r\n  'top-right': {x: 1, y: 0},\r\n  bottom: {x: 0.5, y: 1},\r\n  'bottom-left': {x: 0, y: 1},\r\n  'bottom-right': {x: 1, y: 1},\r\n  left: {x: 0, y: 0.5},\r\n  right: {x: 1, y: 0.5}\r\n};\r\n\r\nexport type PositionType = $Keys<typeof ANCHOR_POSITION>;\r\n\r\nconst ANCHOR_TYPES = Object.keys(ANCHOR_POSITION);\r\n\r\n/**\r\n * Calculate the dynamic position for a popup to fit in a container.\r\n * @param {Number} x - x position of the anchor on screen\r\n * @param {Number} y - y position of the anchor on screen\r\n * @param {Number} width - width of the container\r\n * @param {Number} height - height of the container\r\n * @param {Number} padding - extra space from the edge in pixels\r\n * @param {Number} selfWidth - width of the popup\r\n * @param {Number} selfHeight - height of the popup\r\n * @param {String} anchor - type of the anchor, one of 'top', 'bottom',\r\n    'left', 'right', 'top-left', 'top-right', 'bottom-left' , and  'bottom-right'\r\n * @returns {String} position - one of 'top', 'bottom',\r\n    'left', 'right', 'top-left', 'top-right', 'bottom-left' , and  'bottom-right'\r\n */\r\n// eslint-disable-next-line complexity\r\nexport function getDynamicPosition({\r\n  x,\r\n  y,\r\n  width,\r\n  height,\r\n  selfWidth,\r\n  selfHeight,\r\n  anchor,\r\n  padding = 0\r\n}: {\r\n  x: number,\r\n  y: number,\r\n  width: number,\r\n  height: number,\r\n  selfWidth: number,\r\n  selfHeight: number,\r\n  anchor: PositionType,\r\n  padding: number\r\n}): PositionType {\r\n  let {x: anchorX, y: anchorY} = ANCHOR_POSITION[anchor];\r\n\r\n  // anchorY: top - 0, center - 0.5, bottom - 1\r\n  let top = y - anchorY * selfHeight;\r\n  let bottom = top + selfHeight;\r\n  // If needed, adjust anchorY at 0.5 step between [0, 1]\r\n  const yStep = 0.5;\r\n\r\n  if (top < padding) {\r\n    // Top edge is outside, try move down\r\n    while (top < padding && anchorY >= yStep) {\r\n      anchorY -= yStep;\r\n      top += yStep * selfHeight;\r\n    }\r\n  } else if (bottom > height - padding) {\r\n    // bottom edge is outside, try move up\r\n    while (bottom > height - padding && anchorY <= 1 - yStep) {\r\n      anchorY += yStep;\r\n      bottom -= yStep * selfHeight;\r\n    }\r\n  }\r\n\r\n  // anchorX: left - 0, center - 0.5, right - 1\r\n  let left = x - anchorX * selfWidth;\r\n  let right = left + selfWidth;\r\n\r\n  // If needed, adjust anchorX at 0.5 step between [0, 1]\r\n  let xStep = 0.5;\r\n  if (anchorY === 0.5) {\r\n    // If y is centered, then x cannot also be centered\r\n    anchorX = Math.floor(anchorX);\r\n    xStep = 1;\r\n  }\r\n\r\n  if (left < padding) {\r\n    // Left edge is outside, try move right\r\n    while (left < padding && anchorX >= xStep) {\r\n      anchorX -= xStep;\r\n      left += xStep * selfWidth;\r\n    }\r\n  } else if (right > width - padding) {\r\n    // Right edge is outside, try move left\r\n    while (right > width - padding && anchorX <= 1 - xStep) {\r\n      anchorX += xStep;\r\n      right -= xStep * selfWidth;\r\n    }\r\n  }\r\n\r\n  // Find the name of the new anchor position\r\n  return (\r\n    ANCHOR_TYPES.find(positionType => {\r\n      const anchorPosition = ANCHOR_POSITION[positionType];\r\n      return anchorPosition.x === anchorX && anchorPosition.y === anchorY;\r\n    }) || anchor\r\n  );\r\n}\r\n","// @flow\r\n// Copyright (c) 2015 Uber Technologies, Inc.\r\n\r\n// Permission is hereby granted, free of charge, to any person obtaining a copy\r\n// of this software and associated documentation files (the \"Software\"), to deal\r\n// in the Software without restriction, including without limitation the rights\r\n// to use, copy, modify, merge, publish, distribute, sublicense, and/or sell\r\n// copies of the Software, and to permit persons to whom the Software is\r\n// furnished to do so, subject to the following conditions:\r\n\r\n// The above copyright notice and this permission notice shall be included in\r\n// all copies or substantial portions of the Software.\r\n\r\n// THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\r\n// IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\r\n// FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE\r\n// AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER\r\n// LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,\r\n// OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN\r\n// THE SOFTWARE.\r\nimport React, {createRef} from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport BaseControl from './base-control';\r\n\r\nimport {getDynamicPosition, ANCHOR_POSITION} from '../utils/dynamic-position';\r\n\r\nimport type {BaseControlProps} from './base-control';\r\nimport type {PositionType} from '../utils/dynamic-position';\r\n\r\nconst propTypes = Object.assign({}, BaseControl.propTypes, {\r\n  // Custom className\r\n  className: PropTypes.string,\r\n  // Longitude of the anchor point\r\n  longitude: PropTypes.number.isRequired,\r\n  // Latitude of the anchor point\r\n  latitude: PropTypes.number.isRequired,\r\n  // Altitude of the anchor point\r\n  altitude: PropTypes.number,\r\n  // Offset from the left\r\n  offsetLeft: PropTypes.number,\r\n  // Offset from the top\r\n  offsetTop: PropTypes.number,\r\n  // Size of the tip\r\n  tipSize: PropTypes.number,\r\n  // Whether to show close button\r\n  closeButton: PropTypes.bool,\r\n  // Whether to close on click\r\n  closeOnClick: PropTypes.bool,\r\n  // The popup's location relative to the coordinate\r\n  anchor: PropTypes.oneOf(Object.keys(ANCHOR_POSITION)),\r\n  // Whether the popup anchor should be auto-adjusted to fit within the container\r\n  dynamicPosition: PropTypes.bool,\r\n  // Whether popups should be sorted by depth. Useful when using multiple popups with tilted map.\r\n  sortByDepth: PropTypes.bool,\r\n  // Callback when component is closed\r\n  onClose: PropTypes.func\r\n});\r\n\r\nconst defaultProps = Object.assign({}, BaseControl.defaultProps, {\r\n  className: '',\r\n  altitude: 0,\r\n  offsetLeft: 0,\r\n  offsetTop: 0,\r\n  tipSize: 10,\r\n  anchor: 'bottom',\r\n  dynamicPosition: true,\r\n  sortByDepth: false,\r\n  closeButton: true,\r\n  closeOnClick: true,\r\n  onClose: () => {}\r\n});\r\n\r\nexport type PopupProps = BaseControlProps & {\r\n  className: string,\r\n  longitude: number,\r\n  latitude: number,\r\n  altitude: number,\r\n  offsetLeft: number,\r\n  offsetTop: number,\r\n  tipSize: number,\r\n  closeButton: boolean,\r\n  closeOnClick: boolean,\r\n  anchor: PositionType,\r\n  dynamicPosition: boolean,\r\n  sortByDepth: boolean,\r\n  onClose: Function\r\n};\r\n\r\n/*\r\n * PureComponent doesn't update when context changes.\r\n * The only way is to implement our own shouldComponentUpdate here. Considering\r\n * the parent component (StaticMap or InteractiveMap) is pure, and map re-render\r\n * is almost always triggered by a viewport change, we almost definitely need to\r\n * recalculate the popup's position when the parent re-renders.\r\n */\r\nexport default class Popup extends BaseControl<PopupProps, *, HTMLDivElement> {\r\n  static propTypes = propTypes;\r\n  static defaultProps = defaultProps;\r\n\r\n  _closeOnClick: boolean = false;\r\n  _contentRef: {current: null | HTMLDivElement} = createRef();\r\n\r\n  componentDidMount() {\r\n    super.componentDidMount();\r\n    // Container just got a size, re-calculate position\r\n    this.forceUpdate();\r\n  }\r\n\r\n  _getPosition(x: number, y: number): PositionType {\r\n    const {viewport} = this._context;\r\n    const {anchor, dynamicPosition, tipSize} = this.props;\r\n    const content = this._contentRef.current;\r\n\r\n    if (content) {\r\n      return dynamicPosition\r\n        ? getDynamicPosition({\r\n            x,\r\n            y,\r\n            anchor,\r\n            padding: tipSize,\r\n            width: viewport.width,\r\n            height: viewport.height,\r\n            selfWidth: content.clientWidth,\r\n            selfHeight: content.clientHeight\r\n          })\r\n        : anchor;\r\n    }\r\n\r\n    return anchor;\r\n  }\r\n\r\n  _getContainerStyle(x: number, y: number, z: number, positionType: PositionType) {\r\n    const {viewport} = this._context;\r\n    const {offsetLeft, offsetTop, sortByDepth} = this.props;\r\n    const anchorPosition = ANCHOR_POSITION[positionType];\r\n    const left = x + offsetLeft;\r\n    const top = y + offsetTop;\r\n    const style = {\r\n      position: 'absolute',\r\n      transform: `\r\n        translate(${-anchorPosition.x * 100}%, ${-anchorPosition.y * 100}%)\r\n        translate(${left}px, ${top}px)\r\n      `,\r\n      display: undefined,\r\n      zIndex: undefined\r\n    };\r\n\r\n    if (!sortByDepth) {\r\n      return style;\r\n    }\r\n    if (z > 1 || z < -1 || x < 0 || x > viewport.width || y < 0 || y > viewport.height) {\r\n      // clipped\r\n      style.display = 'none';\r\n    } else {\r\n      // use z-index to rearrange components\r\n      style.zIndex = Math.floor(((1 - z) / 2) * 100000);\r\n    }\r\n\r\n    return style;\r\n  }\r\n\r\n  _onClick = evt => {\r\n    if (this.props.captureClick) {\r\n      evt.stopPropagation();\r\n    }\r\n\r\n    if (this.props.closeOnClick || evt.target.className === 'mapboxgl-popup-close-button') {\r\n      this.props.onClose();\r\n\r\n      const {eventManager} = this._context;\r\n      if (eventManager) {\r\n        // Using with InteractiveMap\r\n        // After we call `onClose` on `anyclick`, this component will be unmounted\r\n        // at which point we unregister the event listeners and stop blocking propagation.\r\n        // Then after a short delay a `click` event will fire\r\n        // Attach a one-time event listener here to prevent it from triggering `onClick` of the base map\r\n        eventManager.once('click', e => e.stopPropagation(), evt.target);\r\n      }\r\n    }\r\n  };\r\n\r\n  _renderTip(positionType: PositionType) {\r\n    const {tipSize} = this.props;\r\n\r\n    return <div key=\"tip\" className=\"mapboxgl-popup-tip\" style={{borderWidth: tipSize}} />;\r\n  }\r\n\r\n  _renderContent() {\r\n    const {closeButton, children} = this.props;\r\n    // If eventManager does not exist (using with static map), listen to React event\r\n    const onClick = this._context.eventManager ? null : this._onClick;\r\n\r\n    return (\r\n      <div\r\n        key=\"content\"\r\n        ref={this._contentRef}\r\n        className=\"mapboxgl-popup-content\"\r\n        onClick={onClick}\r\n      >\r\n        {closeButton && (\r\n          <button key=\"close-button\" className=\"mapboxgl-popup-close-button\" type=\"button\">\r\n            ×\r\n          </button>\r\n        )}\r\n        {children}\r\n      </div>\r\n    );\r\n  }\r\n\r\n  _render() {\r\n    const {className, longitude, latitude, altitude} = this.props;\r\n\r\n    const [x, y, z] = this._context.viewport.project([longitude, latitude, altitude]);\r\n\r\n    const positionType = this._getPosition(x, y);\r\n    const containerStyle = this._getContainerStyle(x, y, z, positionType);\r\n\r\n    return (\r\n      <div\r\n        className={`mapboxgl-popup mapboxgl-popup-anchor-${positionType} ${className}`}\r\n        style={containerStyle}\r\n        ref={this._containerRef}\r\n      >\r\n        {this._renderTip(positionType)}\r\n        {this._renderContent()}\r\n      </div>\r\n    );\r\n  }\r\n}\r\n","/* global window */\r\nlet supported;\r\n\r\nexport function isGeolocationSupported() {\r\n  // not necessary to check again\r\n  if (supported !== undefined) {\r\n    return Promise.resolve(supported);\r\n  }\r\n\r\n  if (window.navigator.permissions !== undefined) {\r\n    // navigator.permissions has incomplete browser support\r\n    // http://caniuse.com/#feat=permissions-api\r\n    // Test for the case where a browser disables Geolocation because of an\r\n    // insecure origin\r\n    return window.navigator.permissions.query({name: 'geolocation'}).then(p => {\r\n      supported = p.state !== 'denied';\r\n      return supported;\r\n    });\r\n  }\r\n\r\n  supported = Boolean(window.navigator.geolocation);\r\n  return Promise.resolve(supported);\r\n}\r\n","// @flow\r\n\r\n// Copyright (c) 2015 Uber Technologies, Inc.\r\n\r\n// Permission is hereby granted, free of charge, to any person obtaining a copy\r\n// of this software and associated documentation files (the \"Software\"), to deal\r\n// in the Software without restriction, including without limitation the rights\r\n// to use, copy, modify, merge, publish, distribute, sublicense, and/or sell\r\n// copies of the Software, and to permit persons to whom the Software is\r\n// furnished to do so, subject to the following conditions:\r\n\r\n// The above copyright notice and this permission notice shall be included in\r\n// all copies or substantial portions of the Software.\r\n\r\n// THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\r\n// IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\r\n// FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE\r\n// AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER\r\n// LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,\r\n// OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN\r\n// THE SOFTWARE.\r\n\r\nimport {document} from '../utils/globals';\r\nimport PropTypes from 'prop-types';\r\nimport BaseControl from './base-control';\r\nimport React from 'react';\r\nimport mapboxgl from '../utils/mapboxgl';\r\n\r\nimport type {BaseControlProps} from './base-control';\r\n\r\nconst propTypes = Object.assign({}, BaseControl.propTypes, {\r\n  // Custom className\r\n  className: PropTypes.string,\r\n  /* eslint-disable max-len */\r\n  // `container` is the [compatible DOM element](https://developer.mozilla.org/en-US/docs/Web/API/Element/requestFullScreen#Compatible_elements)\r\n  // which should be made full screen. By default, the map container element will be made full screen.\r\n  /* eslint-enable max-len */\r\n  container: PropTypes.object\r\n});\r\n\r\nconst defaultProps = Object.assign({}, BaseControl.defaultProps, {\r\n  className: '',\r\n  container: null\r\n});\r\n\r\nexport type FullscreenControlProps = BaseControlProps & {\r\n  className: string,\r\n  container: ?HTMLElement\r\n};\r\n\r\ntype State = {\r\n  isFullscreen: boolean,\r\n  showButton: boolean\r\n};\r\n\r\nexport default class FullscreenControl extends BaseControl<\r\n  FullscreenControlProps,\r\n  State,\r\n  HTMLDivElement\r\n> {\r\n  static propTypes = propTypes;\r\n  static defaultProps = defaultProps;\r\n\r\n  state = {\r\n    isFullscreen: false,\r\n    showButton: false\r\n  };\r\n\r\n  _mapboxFullscreenControl: any = null;\r\n\r\n  componentDidMount() {\r\n    const container = this.props.container || this._context.mapContainer;\r\n\r\n    this._mapboxFullscreenControl = new mapboxgl.FullscreenControl({\r\n      container\r\n    });\r\n\r\n    // eslint-disable-next-line\r\n    this.setState({\r\n      showButton: this._mapboxFullscreenControl._checkFullscreenSupport()\r\n    });\r\n\r\n    document.addEventListener(\r\n      this._mapboxFullscreenControl._fullscreenchange,\r\n      this._onFullscreenChange\r\n    );\r\n  }\r\n\r\n  componentWillUnmount() {\r\n    document.removeEventListener(\r\n      this._mapboxFullscreenControl._fullscreenchange,\r\n      this._onFullscreenChange\r\n    );\r\n  }\r\n\r\n  _onFullscreenChange = () => {\r\n    const nextState = !this._mapboxFullscreenControl._fullscreen;\r\n    // this is a hack\r\n    // Mapbox use `_fullscreen` flag to toggle fullscreen mode\r\n    this._mapboxFullscreenControl._fullscreen = nextState;\r\n    this.setState({isFullscreen: nextState});\r\n  };\r\n\r\n  _onClickFullscreen = () => {\r\n    this._mapboxFullscreenControl._onClickFullscreen();\r\n  };\r\n\r\n  _renderButton(type: string, label: string, callback: Function) {\r\n    return (\r\n      <button\r\n        key={type}\r\n        className={`mapboxgl-ctrl-icon mapboxgl-ctrl-${type}`}\r\n        type=\"button\"\r\n        title={label}\r\n        onClick={callback}\r\n      >\r\n        <span className=\"mapboxgl-ctrl-icon\" aria-hidden=\"true\" />\r\n      </button>\r\n    );\r\n  }\r\n\r\n  _render() {\r\n    if (!this.state.showButton) {\r\n      return null;\r\n    }\r\n\r\n    const {className} = this.props;\r\n    const {isFullscreen} = this.state;\r\n\r\n    const type = isFullscreen ? 'shrink' : 'fullscreen';\r\n\r\n    return (\r\n      <div className={`mapboxgl-ctrl mapboxgl-ctrl-group ${className}`} ref={this._containerRef}>\r\n        {this._renderButton(type, 'Toggle fullscreen', this._onClickFullscreen)}\r\n      </div>\r\n    );\r\n  }\r\n}\r\n","// @flow\r\n\r\n/* global window */\r\nimport React, {createRef} from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport WebMercatorViewport from 'viewport-mercator-project';\r\n\r\nimport mapboxgl from '../utils/mapboxgl';\r\n\r\nimport BaseControl from './base-control';\r\nimport Marker from './marker';\r\nimport MapState from '../utils/map-state';\r\nimport TransitionManager from '../utils/transition-manager';\r\nimport {isGeolocationSupported} from '../utils/geolocate-utils';\r\n\r\nimport type {BaseControlProps} from './base-control';\r\n\r\nconst LINEAR_TRANSITION_PROPS = Object.assign({}, TransitionManager.defaultProps, {\r\n  transitionDuration: 500\r\n});\r\n\r\nconst noop = () => {};\r\n\r\nconst propTypes = Object.assign({}, BaseControl.propTypes, {\r\n  // Custom className\r\n  className: PropTypes.string,\r\n  style: PropTypes.object,\r\n  // Custom label assigned to the control\r\n  label: PropTypes.string,\r\n\r\n  // mapbox geolocate options\r\n  // https://docs.mapbox.com/mapbox-gl-js/api/#geolocatecontrol\r\n  positionOptions: PropTypes.object,\r\n  fitBoundsOptions: PropTypes.object,\r\n  trackUserLocation: PropTypes.bool,\r\n  showUserLocation: PropTypes.bool,\r\n\r\n  // Callbacks fired when the user interacted with the map. The object passed to the callbacks\r\n  // contains viewport properties such as `longitude`, `latitude`, `zoom` etc.\r\n  onViewStateChange: PropTypes.func,\r\n  onViewportChange: PropTypes.func,\r\n\r\n  onGeolocate: PropTypes.func\r\n});\r\n\r\nconst defaultProps = Object.assign({}, BaseControl.defaultProps, {\r\n  className: '',\r\n  style: {},\r\n  label: 'Geolocate',\r\n\r\n  // mapbox geolocate options\r\n  positionOptions: null,\r\n  fitBoundsOptions: null,\r\n  trackUserLocation: false,\r\n  showUserLocation: true,\r\n\r\n  onGeolocate: () => {}\r\n});\r\n\r\nexport type GeolocateControlProps = BaseControlProps & {\r\n  className: string,\r\n  style: Object,\r\n  label: string,\r\n  positionOptions: any,\r\n  fitBoundsOptions: any,\r\n  trackUserLocation: boolean,\r\n  showUserLocation: boolean,\r\n  onViewStateChange?: Function,\r\n  onViewportChange?: Function,\r\n  onGeolocate?: Function\r\n};\r\n\r\ntype Coordinate = {\r\n  longitude: number,\r\n  latitude: number,\r\n  accuracy: number\r\n};\r\ntype Position = {\r\n  coords: Coordinate\r\n};\r\ntype State = {\r\n  supportsGeolocation: boolean,\r\n  markerPosition: ?Coordinate\r\n};\r\ntype GeolocateControlOptions = {\r\n  positionOptions?: any,\r\n  fitBoundsOptions?: any,\r\n  trackUserLocation?: boolean,\r\n  showUserLocation?: boolean\r\n};\r\n\r\nexport default class GeolocateControl extends BaseControl<\r\n  GeolocateControlProps,\r\n  State,\r\n  HTMLDivElement\r\n> {\r\n  static propTypes = propTypes;\r\n  static defaultProps = defaultProps;\r\n\r\n  state = {\r\n    supportsGeolocation: false,\r\n    markerPosition: null\r\n  };\r\n\r\n  _mapboxGeolocateControl: any = null;\r\n\r\n  _geolocateButtonRef: {current: null | HTMLButtonElement} = createRef();\r\n\r\n  componentDidMount() {\r\n    isGeolocationSupported().then(result => {\r\n      this.setState({supportsGeolocation: result});\r\n      this._setupMapboxGeolocateControl(result);\r\n    });\r\n  }\r\n\r\n  componentWillUnmount() {\r\n    // re-implement MapboxGeolocateControl's _onRemove\r\n    // clear the geolocation watch if exists\r\n    if (this._mapboxGeolocateControl) {\r\n      const geolocationWatchID = this._mapboxGeolocateControl._geolocationWatchID;\r\n      if (geolocationWatchID !== undefined) {\r\n        window.navigator.geolocation.clearWatch(geolocationWatchID);\r\n        this._mapboxGeolocateControl._geolocationWatchID = undefined;\r\n      }\r\n    }\r\n  }\r\n\r\n  _setupMapboxGeolocateControl = (supportsGeolocation: boolean) => {\r\n    if (!supportsGeolocation) {\r\n      /* eslint-disable no-console, no-undef */\r\n      console.warn(\r\n        'Geolocation support is not available, the GeolocateControl will not be visible.'\r\n      );\r\n      /* eslint-enable no-console, no-undef */\r\n      return;\r\n    }\r\n\r\n    // For null option, use Mapbox default value\r\n    const controlOptions: GeolocateControlOptions = {\r\n      // disable showUserLocation to avoid Mapbox accessing marker before rendering\r\n      showUserLocation: false\r\n    };\r\n    ['positionOptions', 'fitBoundsOptions', 'trackUserLocation'].forEach(prop => {\r\n      if (prop in this.props && this.props[prop] !== null) {\r\n        controlOptions[prop] = this.props[prop];\r\n      }\r\n    });\r\n\r\n    this._mapboxGeolocateControl = new mapboxgl.GeolocateControl(controlOptions);\r\n\r\n    // the following re-implement MapboxGeolocateControl's _setupUI\r\n    // replace mapbox internal prop\r\n    this._mapboxGeolocateControl._watchState = 'OFF';\r\n\r\n    // replace mapbox internal UI elements\r\n    this._mapboxGeolocateControl._geolocateButton = this._geolocateButtonRef.current;\r\n    if (\r\n      this._mapboxGeolocateControl.options.trackUserLocation &&\r\n      this._mapboxGeolocateControl._geolocateButton\r\n    ) {\r\n      this._mapboxGeolocateControl._geolocateButton.setAttribute('aria-pressed', 'false');\r\n    }\r\n\r\n    // replace mapbox internal methods\r\n    this._mapboxGeolocateControl._updateMarker = this._updateMarker;\r\n    this._mapboxGeolocateControl._updateCamera = this._updateCamera;\r\n\r\n    this._mapboxGeolocateControl._setup = true;\r\n\r\n    // when the camera is changed (and it's not as a result of the Geolocation Control) change\r\n    // the watch mode to background watch, so that the marker is updated but not the camera.\r\n    if (this._mapboxGeolocateControl.options.trackUserLocation) {\r\n      this._context.eventManager.on('panstart', () => {\r\n        if (this._mapboxGeolocateControl._watchState === 'ACTIVE_LOCK') {\r\n          this._mapboxGeolocateControl._watchState = 'BACKGROUND';\r\n          this._mapboxGeolocateControl._geolocateButton.classList.add(\r\n            'mapboxgl-ctrl-geolocate-background'\r\n          );\r\n          this._mapboxGeolocateControl._geolocateButton.classList.remove(\r\n            'mapboxgl-ctrl-geolocate-active'\r\n          );\r\n        }\r\n      });\r\n    }\r\n\r\n    this._mapboxGeolocateControl.on('geolocate', this.props.onGeolocate);\r\n  };\r\n\r\n  _onClickGeolocate = () => {\r\n    this._mapboxGeolocateControl._map = this._context.map;\r\n\r\n    if (this.props.showUserLocation) {\r\n      this._mapboxGeolocateControl.on('geolocate', this._updateMarker);\r\n      this._mapboxGeolocateControl.on('trackuserlocationend', this._updateMarker);\r\n    }\r\n\r\n    return this._mapboxGeolocateControl.trigger();\r\n  };\r\n\r\n  _updateMarker = (position: Position) => {\r\n    if (position) {\r\n      this.setState({markerPosition: position.coords});\r\n    }\r\n  };\r\n\r\n  _getBounds = (position: Position) => {\r\n    const center = new mapboxgl.LngLat(position.coords.longitude, position.coords.latitude);\r\n    const radius = position.coords.accuracy;\r\n    const bounds = center.toBounds(radius);\r\n\r\n    return [[bounds._ne.lng, bounds._ne.lat], [bounds._sw.lng, bounds._sw.lat]];\r\n  };\r\n\r\n  _updateCamera = (position: Position) => {\r\n    const {viewport} = this._context;\r\n\r\n    const bounds = this._getBounds(position);\r\n    const {longitude, latitude, zoom} = new WebMercatorViewport(viewport).fitBounds(bounds);\r\n\r\n    const newViewState = Object.assign({}, viewport, {\r\n      longitude,\r\n      latitude,\r\n      zoom\r\n    });\r\n    const mapState = new MapState(newViewState);\r\n    const viewState = Object.assign({}, mapState.getViewportProps(), LINEAR_TRANSITION_PROPS);\r\n\r\n    const onViewportChange = this.props.onViewportChange || this._context.onViewportChange || noop;\r\n    const onViewStateChange =\r\n      this.props.onViewStateChange || this._context.onViewStateChange || noop;\r\n\r\n    // Call new style callback\r\n    onViewStateChange({viewState});\r\n\r\n    // Call old style callback\r\n    onViewportChange(viewState);\r\n  };\r\n\r\n  _renderButton = (type: string, label: string, callback: Function) => {\r\n    return (\r\n      <button\r\n        key={type}\r\n        className={`mapboxgl-ctrl-icon mapboxgl-ctrl-${type}`}\r\n        ref={this._geolocateButtonRef}\r\n        type=\"button\"\r\n        title={label}\r\n        onClick={callback}\r\n      >\r\n        <span className=\"mapboxgl-ctrl-icon\" aria-hidden=\"true\" />\r\n      </button>\r\n    );\r\n  };\r\n\r\n  _renderMarker = () => {\r\n    const {markerPosition} = this.state;\r\n    const {showUserLocation} = this.props;\r\n    if (!markerPosition || !showUserLocation) {\r\n      return null;\r\n    }\r\n\r\n    return (\r\n      // $FlowFixMe\r\n      <Marker\r\n        key=\"location-maker\"\r\n        className=\"mapboxgl-user-location-dot\"\r\n        longitude={markerPosition.longitude}\r\n        latitude={markerPosition.latitude}\r\n        onContextMenu={e => e.preventDefault()}\r\n        captureDrag={false}\r\n        captureDoubleClick={false}\r\n      />\r\n    );\r\n  };\r\n\r\n  _render() {\r\n    if (!this.state.supportsGeolocation) {\r\n      return null;\r\n    }\r\n\r\n    const {className, style, label} = this.props;\r\n    return (\r\n      <div>\r\n        {this._renderMarker()}\r\n        <div\r\n          key=\"geolocate-control\"\r\n          className={`mapboxgl-ctrl mapboxgl-ctrl-group ${className}`}\r\n          ref={this._containerRef}\r\n          style={style}\r\n          onContextMenu={e => e.preventDefault()}\r\n        >\r\n          {this._renderButton('geolocate', label, this._onClickGeolocate)}\r\n        </div>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n","// @flow\r\nimport React from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport BaseControl from './base-control';\r\n\r\nimport MapState from '../utils/map-state';\r\nimport {LINEAR_TRANSITION_PROPS} from '../utils/map-controller';\r\n\r\nimport deprecateWarn from '../utils/deprecate-warn';\r\nimport {compareVersions} from '../utils/version';\r\n\r\nimport type {BaseControlProps} from './base-control';\r\n\r\nconst noop = () => {};\r\n\r\nconst propTypes = Object.assign({}, BaseControl.propTypes, {\r\n  // Custom className\r\n  className: PropTypes.string,\r\n  // Callbacks fired when the user interacted with the map. The object passed to the callbacks\r\n  // contains viewport properties such as `longitude`, `latitude`, `zoom` etc.\r\n  onViewStateChange: PropTypes.func,\r\n  onViewportChange: PropTypes.func,\r\n  // Show/hide compass button\r\n  showCompass: PropTypes.bool,\r\n  // Show/hide zoom buttons\r\n  showZoom: PropTypes.bool,\r\n  // Custom labels assigned to the controls\r\n  zoomInLabel: PropTypes.string,\r\n  zoomOutLabel: PropTypes.string,\r\n  compassLabel: PropTypes.string\r\n});\r\n\r\nconst defaultProps = Object.assign({}, BaseControl.defaultProps, {\r\n  className: '',\r\n  showCompass: true,\r\n  showZoom: true,\r\n  zoomInLabel: 'Zoom In',\r\n  zoomOutLabel: 'Zoom Out',\r\n  compassLabel: 'Reset North'\r\n});\r\n\r\nexport type NavigationControlProps = BaseControlProps & {\r\n  className: string,\r\n  onViewStateChange?: Function,\r\n  onViewportChange?: Function,\r\n  showCompass: boolean,\r\n  showZoom: boolean,\r\n  zoomInLabel: string,\r\n  zoomOutLabel: string,\r\n  compassLabel: string\r\n};\r\n\r\ntype ViewportProps = {\r\n  longitude: number,\r\n  latitude: number,\r\n  zoom: number,\r\n  pitch: number,\r\n  bearing: number\r\n};\r\n\r\n// Mapbox version flags. CSS classes were changed in certain versions.\r\nconst VERSION_LEGACY = 1;\r\nconst VERSION_1_6 = 2;\r\n\r\nfunction getUIVersion(mapboxVersion: string): number {\r\n  return compareVersions(mapboxVersion, '1.6.0') >= 0 ? VERSION_1_6 : VERSION_LEGACY;\r\n}\r\n\r\n/*\r\n * PureComponent doesn't update when context changes, so\r\n * implementing our own shouldComponentUpdate here.\r\n */\r\nexport default class NavigationControl extends BaseControl<\r\n  NavigationControlProps,\r\n  *,\r\n  HTMLDivElement\r\n> {\r\n  static propTypes = propTypes;\r\n  static defaultProps = defaultProps;\r\n\r\n  constructor(props: NavigationControlProps) {\r\n    super(props);\r\n    // Check for deprecated props\r\n    deprecateWarn(props);\r\n  }\r\n\r\n  _uiVersion: number;\r\n\r\n  _updateViewport(opts: $Shape<ViewportProps>) {\r\n    const {viewport} = this._context;\r\n    const mapState = new MapState(Object.assign({}, viewport, opts));\r\n    const viewState = Object.assign({}, mapState.getViewportProps(), LINEAR_TRANSITION_PROPS);\r\n\r\n    const onViewportChange = this.props.onViewportChange || this._context.onViewportChange || noop;\r\n    const onViewStateChange =\r\n      this.props.onViewStateChange || this._context.onViewStateChange || noop;\r\n\r\n    // Call new style callback\r\n    onViewStateChange({viewState});\r\n\r\n    // Call old style callback\r\n    onViewportChange(viewState);\r\n  }\r\n\r\n  _onZoomIn = () => {\r\n    this._updateViewport({zoom: this._context.viewport.zoom + 1});\r\n  };\r\n\r\n  _onZoomOut = () => {\r\n    this._updateViewport({zoom: this._context.viewport.zoom - 1});\r\n  };\r\n\r\n  _onResetNorth = () => {\r\n    this._updateViewport({bearing: 0, pitch: 0});\r\n  };\r\n\r\n  _renderCompass() {\r\n    const {bearing} = this._context.viewport;\r\n    const style = {transform: `rotate(${-bearing}deg)`};\r\n\r\n    return this._uiVersion === VERSION_1_6 ? (\r\n      <span className=\"mapboxgl-ctrl-icon\" aria-hidden=\"true\" style={style} />\r\n    ) : (\r\n      <span className=\"mapboxgl-ctrl-compass-arrow\" style={style} />\r\n    );\r\n  }\r\n\r\n  _renderButton(type: string, label: string, callback: Function, children: any) {\r\n    return (\r\n      <button\r\n        key={type}\r\n        className={`mapboxgl-ctrl-icon mapboxgl-ctrl-${type}`}\r\n        type=\"button\"\r\n        title={label}\r\n        onClick={callback}\r\n      >\r\n        {children || <span className=\"mapboxgl-ctrl-icon\" aria-hidden=\"true\" />}\r\n      </button>\r\n    );\r\n  }\r\n\r\n  _render() {\r\n    const {className, showCompass, showZoom, zoomInLabel, zoomOutLabel, compassLabel} = this.props;\r\n\r\n    if (!this._uiVersion) {\r\n      // map may not exist if context is provided by user application (e.g. DeckGL)\r\n      const {map} = this._context;\r\n      this._uiVersion = getUIVersion(map && map.version);\r\n    }\r\n\r\n    return (\r\n      <div className={`mapboxgl-ctrl mapboxgl-ctrl-group ${className}`} ref={this._containerRef}>\r\n        {showZoom && this._renderButton('zoom-in', zoomInLabel, this._onZoomIn)}\r\n        {showZoom && this._renderButton('zoom-out', zoomOutLabel, this._onZoomOut)}\r\n        {showCompass &&\r\n          this._renderButton('compass', compassLabel, this._onResetNorth, this._renderCompass())}\r\n      </div>\r\n    );\r\n  }\r\n}\r\n","// @flow\r\n\r\n// Helper function for version comparison\r\n// A version is a string in the format of \"{major}.{minor}.{patch}\"\r\n// Empty/missing version is treated as \"0.0.0\"\r\n// If version1 is smaller than version2, return -1\r\n// If version1 is larger than version2, return 1\r\n// If equal, return 0\r\nexport function compareVersions(version1: string, version2: string): number {\r\n  const v1 = (version1 || '').split('.').map(Number);\r\n  const v2 = (version2 || '').split('.').map(Number);\r\n\r\n  for (let i = 0; i < 3; i++) {\r\n    const part1 = v1[i] || 0;\r\n    const part2 = v2[i] || 0;\r\n    if (part1 < part2) {\r\n      return -1;\r\n    }\r\n    if (part1 > part2) {\r\n      return 1;\r\n    }\r\n  }\r\n\r\n  return 0;\r\n}\r\n","// @flow\r\n// Copyright (c) 2015 Uber Technologies, Inc.\r\n\r\n// Permission is hereby granted, free of charge, to any person obtaining a copy\r\n// of this software and associated documentation files (the \"Software\"), to deal\r\n// in the Software without restriction, including without limitation the rights\r\n// to use, copy, modify, merge, publish, distribute, sublicense, and/or sell\r\n// copies of the Software, and to permit persons to whom the Software is\r\n// furnished to do so, subject to the following conditions:\r\n\r\n// The above copyright notice and this permission notice shall be included in\r\n// all copies or substantial portions of the Software.\r\n\r\n// THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\r\n// IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\r\n// FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE\r\n// AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER\r\n// LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,\r\n// OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN\r\n// THE SOFTWARE.\r\nimport React from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport BaseControl from './base-control';\r\nimport mapboxgl from '../utils/mapboxgl';\r\n\r\nimport type {BaseControlProps} from './base-control';\r\n\r\nconst propTypes = Object.assign({}, BaseControl.propTypes, {\r\n  maxWidth: PropTypes.number,\r\n  unit: PropTypes.oneOf(['imperial', 'metric', 'nautical'])\r\n});\r\n\r\nconst defaultProps = Object.assign({}, BaseControl.defaultProps, {\r\n  maxWidth: 100,\r\n  unit: 'metric'\r\n});\r\n\r\nexport type ScaleControlProps = BaseControlProps & {\r\n  maxWidth: number,\r\n  unit: string\r\n};\r\n\r\nexport default class ScaleControl extends BaseControl<ScaleControlProps, *, HTMLDivElement> {\r\n  static propTypes = propTypes;\r\n  static defaultProps = defaultProps;\r\n\r\n  componentDidMount() {\r\n    const mapboxScaleControl = new mapboxgl.ScaleControl();\r\n    mapboxScaleControl._map = this._context.map;\r\n    mapboxScaleControl._container = this._containerRef.current;\r\n    this._mapboxScaleControl = mapboxScaleControl;\r\n\r\n    this._update();\r\n  }\r\n\r\n  _control: any = null;\r\n  _mapboxScaleControl: any = null;\r\n\r\n  _update() {\r\n    const mapboxScaleControl = this._mapboxScaleControl;\r\n    if (mapboxScaleControl) {\r\n      mapboxScaleControl.options = this.props;\r\n      mapboxScaleControl._onMove();\r\n    }\r\n  }\r\n\r\n  _render() {\r\n    this._control = this._control || (\r\n      <div ref={this._containerRef} className=\"mapboxgl-ctrl mapboxgl-ctrl-scale\" />\r\n    );\r\n    // Likely viewport has changed\r\n    this._update();\r\n\r\n    return this._control;\r\n  }\r\n}\r\n","// @flow\r\n// Copyright (c) 2015 Uber Technologies, Inc.\r\n\r\n// Permission is hereby granted, free of charge, to any person obtaining a copy\r\n// of this software and associated documentation files (the \"Software\"), to deal\r\n// in the Software without restriction, including without limitation the rights\r\n// to use, copy, modify, merge, publish, distribute, sublicense, and/or sell\r\n// copies of the Software, and to permit persons to whom the Software is\r\n// furnished to do so, subject to the following conditions:\r\n\r\n// The above copyright notice and this permission notice shall be included in\r\n// all copies or substantial portions of the Software.\r\n\r\n// THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\r\n// IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\r\n// FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE\r\n// AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER\r\n// LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,\r\n// OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN\r\n// THE SOFTWARE.\r\n\r\nimport React from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport BaseControl from '../components/base-control';\r\nimport {window} from '../utils/globals';\r\n\r\nimport type {BaseControlProps} from '../components/base-control';\r\n\r\nconst propTypes = Object.assign({}, BaseControl.propTypes, {\r\n  redraw: PropTypes.func.isRequired\r\n});\r\n\r\nconst defaultProps = {\r\n  captureScroll: false,\r\n  captureDrag: false,\r\n  captureClick: false,\r\n  captureDoubleClick: false\r\n};\r\n\r\nexport type CanvasOverlayProps = BaseControlProps & {\r\n  redraw: Function\r\n};\r\n\r\nexport default class CanvasOverlay extends BaseControl<CanvasOverlayProps, *, HTMLCanvasElement> {\r\n  static propTypes = propTypes;\r\n  static defaultProps = defaultProps;\r\n\r\n  _canvas: ?HTMLCanvasElement;\r\n  _ctx: any;\r\n\r\n  componentDidMount() {\r\n    const canvas = this._containerRef.current;\r\n    if (canvas) {\r\n      this._canvas = canvas;\r\n      this._ctx = canvas.getContext('2d');\r\n    }\r\n    this._redraw();\r\n  }\r\n\r\n  _redraw = () => {\r\n    const ctx = this._ctx;\r\n    if (!ctx) {\r\n      return;\r\n    }\r\n\r\n    const pixelRatio = window.devicePixelRatio || 1;\r\n    ctx.save();\r\n    ctx.scale(pixelRatio, pixelRatio);\r\n\r\n    const {viewport, isDragging} = this._context;\r\n    this.props.redraw({\r\n      width: viewport.width,\r\n      height: viewport.height,\r\n      ctx,\r\n      isDragging,\r\n      project: viewport.project.bind(viewport),\r\n      unproject: viewport.unproject.bind(viewport)\r\n    });\r\n\r\n    ctx.restore();\r\n  };\r\n\r\n  _render() {\r\n    const pixelRatio = window.devicePixelRatio || 1;\r\n    const {\r\n      viewport: {width, height}\r\n    } = this._context;\r\n    this._redraw();\r\n\r\n    return (\r\n      <canvas\r\n        ref={this._containerRef}\r\n        width={width * pixelRatio}\r\n        height={height * pixelRatio}\r\n        style={{\r\n          width: `${width}px`,\r\n          height: `${height}px`,\r\n          position: 'absolute',\r\n          left: 0,\r\n          top: 0\r\n        }}\r\n      />\r\n    );\r\n  }\r\n}\r\n","// @flow\r\n\r\n// Copyright (c) 2015 Uber Technologies, Inc.\r\n\r\n// Permission is hereby granted, free of charge, to any person obtaining a copy\r\n// of this software and associated documentation files (the \"Software\"), to deal\r\n// in the Software without restriction, including without limitation the rights\r\n// to use, copy, modify, merge, publish, distribute, sublicense, and/or sell\r\n// copies of the Software, and to permit persons to whom the Software is\r\n// furnished to do so, subject to the following conditions:\r\n\r\n// The above copyright notice and this permission notice shall be included in\r\n// all copies or substantial portions of the Software.\r\n\r\n// THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\r\n// IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\r\n// FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE\r\n// AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER\r\n// LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,\r\n// OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN\r\n// THE SOFTWARE.\r\n\r\nimport React from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport BaseControl from '../components/base-control';\r\n\r\nimport type {BaseControlProps} from '../components/base-control';\r\n\r\nconst propTypes = Object.assign({}, BaseControl.propTypes, {\r\n  redraw: PropTypes.func.isRequired,\r\n  style: PropTypes.object\r\n});\r\n\r\nconst defaultProps = {\r\n  captureScroll: false,\r\n  captureDrag: false,\r\n  captureClick: false,\r\n  captureDoubleClick: false\r\n};\r\n\r\nexport type HTMLOverlayProps = BaseControlProps & {\r\n  redraw: Function,\r\n  style?: Object\r\n};\r\n\r\nexport default class HTMLOverlay extends BaseControl<HTMLOverlayProps, *, HTMLDivElement> {\r\n  static propTypes = propTypes;\r\n  static defaultProps = defaultProps;\r\n\r\n  _render() {\r\n    const {viewport, isDragging} = this._context;\r\n    const style = Object.assign(\r\n      {\r\n        position: 'absolute',\r\n        left: 0,\r\n        top: 0,\r\n        width: viewport.width,\r\n        height: viewport.height\r\n      },\r\n      this.props.style\r\n    );\r\n\r\n    return (\r\n      <div ref={this._containerRef} style={style}>\r\n        {this.props.redraw({\r\n          width: viewport.width,\r\n          height: viewport.height,\r\n          isDragging,\r\n          project: viewport.project.bind(viewport),\r\n          unproject: viewport.unproject.bind(viewport)\r\n        })}\r\n      </div>\r\n    );\r\n  }\r\n}\r\n","// @flow\r\n\r\n// Copyright (c) 2015 Uber Technologies, Inc.\r\n\r\n// Permission is hereby granted, free of charge, to any person obtaining a copy\r\n// of this software and associated documentation files (the \"Software\"), to deal\r\n// in the Software without restriction, including without limitation the rights\r\n// to use, copy, modify, merge, publish, distribute, sublicense, and/or sell\r\n// copies of the Software, and to permit persons to whom the Software is\r\n// furnished to do so, subject to the following conditions:\r\n\r\n// The above copyright notice and this permission notice shall be included in\r\n// all copies or substantial portions of the Software.\r\n\r\n// THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\r\n// IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\r\n// FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE\r\n// AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER\r\n// LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,\r\n// OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN\r\n// THE SOFTWARE.\r\n\r\nimport React from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport BaseControl from '../components/base-control';\r\n\r\nimport type {BaseControlProps} from '../components/base-control';\r\n\r\nconst propTypes = Object.assign({}, BaseControl.propTypes, {\r\n  redraw: PropTypes.func.isRequired,\r\n  style: PropTypes.object\r\n});\r\n\r\nconst defaultProps = {\r\n  captureScroll: false,\r\n  captureDrag: false,\r\n  captureClick: false,\r\n  captureDoubleClick: false\r\n};\r\n\r\nexport type SVGOverlayProps = BaseControlProps & {\r\n  redraw: Function,\r\n  style?: Object\r\n};\r\n\r\nexport default class SVGOverlay extends BaseControl<SVGOverlayProps, *, Element> {\r\n  static propTypes = propTypes;\r\n  static defaultProps = defaultProps;\r\n\r\n  _render() {\r\n    const {viewport, isDragging} = this._context;\r\n    const style = Object.assign(\r\n      {\r\n        position: 'absolute',\r\n        left: 0,\r\n        top: 0\r\n      },\r\n      this.props.style\r\n    );\r\n\r\n    return (\r\n      <svg width={viewport.width} height={viewport.height} ref={this._containerRef} style={style}>\r\n        {this.props.redraw({\r\n          width: viewport.width,\r\n          height: viewport.height,\r\n          isDragging,\r\n          project: viewport.project.bind(viewport),\r\n          unproject: viewport.unproject.bind(viewport)\r\n        })}\r\n      </svg>\r\n    );\r\n  }\r\n}\r\n","// Copyright (c) 2015 Uber Technologies, Inc.\r\n\r\n// Permission is hereby granted, free of charge, to any person obtaining a copy\r\n// of this software and associated documentation files (the \"Software\"), to deal\r\n// in the Software without restriction, including without limitation the rights\r\n// to use, copy, modify, merge, publish, distribute, sublicense, and/or sell\r\n// copies of the Software, and to permit persons to whom the Software is\r\n// furnished to do so, subject to the following conditions:\r\n\r\n// The above copyright notice and this permission notice shall be included in\r\n// all copies or substantial portions of the Software.\r\n\r\n// THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\r\n// IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\r\n// FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE\r\n// AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER\r\n// LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,\r\n// OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN\r\n// THE SOFTWARE.\r\n\r\n// React Map Components\r\nexport {default} from './components/interactive-map';\r\nexport {default as InteractiveMap} from './components/interactive-map';\r\nexport {default as StaticMap} from './components/static-map';\r\nexport {default as Source} from './components/source';\r\nexport {default as Layer} from './components/layer';\r\n\r\n// React Controls\r\nexport {default as BaseControl} from './components/base-control';\r\nexport {default as Marker} from './components/marker';\r\nexport {default as Popup} from './components/popup';\r\nexport {default as FullscreenControl} from './components/fullscreen-control';\r\nexport {default as GeolocateControl} from './components/geolocate-control';\r\nexport {default as NavigationControl} from './components/navigation-control';\r\nexport {default as ScaleControl} from './components/scale-control';\r\n\r\n// Overlays\r\nexport {default as CanvasOverlay} from './overlays/canvas-overlay';\r\nexport {default as HTMLOverlay} from './overlays/html-overlay';\r\nexport {default as SVGOverlay} from './overlays/svg-overlay';\r\n\r\n// Utilities\r\nexport {TRANSITION_EVENTS} from './utils/transition-manager';\r\nexport {\r\n  TransitionInterpolator,\r\n  LinearInterpolator,\r\n  ViewportFlyToInterpolator as FlyToInterpolator\r\n} from './utils/transition';\r\nexport {default as MapController} from './utils/map-controller';\r\n\r\n// Experimental Features (May change in minor version bumps, use at your own risk)\r\nexport {default as _MapContext} from './components/map-context';\r\n"],"sourceRoot":""}